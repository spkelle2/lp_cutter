         120929811 function calls in 1940.700 seconds

   Ordered by: internal time
   List reduced from 61 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       84 1432.942   17.059 1432.961   17.059 min_bisection.py:316(_optimize)
119555081  255.651    0.000  272.705    0.000 min_bisection.py:372(_get_cut_depth)
       84  184.009    2.191  456.714    5.437 min_bisection.py:434(_recalibrate_cut_depths_by_search_proportion)
       84   17.877    0.213   17.877    0.213 {built-in method builtins.sorted}
   424403   17.054    0.000   17.054    0.000 min_bisection.py:408(_get_vals)
       84   10.248    0.122   11.591    0.138 min_bisection.py:487(_remove_constraints)
        1    9.171    9.171    9.171    9.171 min_bisection.py:69(<setcomp>)
       84    5.867    0.070  480.459    5.720 min_bisection.py:457(_find_most_violated_constraints)
    82354    4.279    0.000    4.552    0.000 min_bisection.py:248(_add_triangle_inequality)
    84173    0.848    0.000    0.848    0.000 {method 'uniform' of 'numpy.random.mtrand.RandomState' objects}
        1    0.740    0.740   10.665   10.665 min_bisection.py:167(_instantiate_model)
     8386    0.664    0.000    0.664    0.000 min_bisection.py:241(<genexpr>)
    89248    0.231    0.000    0.231    0.000 min_bisection.py:498(<listcomp>)
        1    0.208    0.208    0.208    0.208 random.py:315(sample)
    89248    0.197    0.000    0.197    0.000 {method 'match' of 're.Pattern' objects}
       84    0.132    0.002 1929.726   22.973 min_bisection.py:510(_iterate)
    82354    0.116    0.000    0.116    0.000 {method 'remove' of 'set' objects}
   164714    0.081    0.000    0.157    0.000 abc.py:96(__instancecheck__)
        1    0.078    0.078 1940.700 1940.700 min_bisection.py:531(solve_iteratively)
   164714    0.076    0.000    0.076    0.000 {built-in method _abc._abc_instancecheck}


