         129688563 function calls in 1340.455 seconds

   Ordered by: internal time
   List reduced from 61 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       72  868.777   12.066  868.792   12.067 min_bisection.py:316(_optimize)
128292780  228.849    0.000  240.722    0.000 min_bisection.py:372(_get_cut_depth)
       72  180.592    2.508  421.314    5.852 min_bisection.py:434(_recalibrate_cut_depths_by_search_proportion)
       72   15.170    0.211   15.170    0.211 {built-in method builtins.sorted}
        1   12.508   12.508   12.508   12.508 min_bisection.py:69(<setcomp>)
   420579   11.873    0.000   11.873    0.000 min_bisection.py:408(_get_vals)
       72    9.460    0.131   11.027    0.153 min_bisection.py:487(_remove_constraints)
       72    5.005    0.070  441.489    6.132 min_bisection.py:457(_find_most_violated_constraints)
    65296    3.269    0.000    3.482    0.000 min_bisection.py:248(_add_triangle_inequality)
        1    1.039    1.039   15.198   15.198 min_bisection.py:167(_instantiate_model)
   107069    0.926    0.000    0.926    0.000 {method 'uniform' of 'numpy.random.mtrand.RandomState' objects}
        1    0.861    0.861    0.861    0.861 min_bisection.py:237(<dictcomp>)
     9731    0.759    0.000    0.759    0.000 min_bisection.py:241(<genexpr>)
   123946    0.311    0.000    0.311    0.000 min_bisection.py:498(<listcomp>)
   123946    0.244    0.000    0.244    0.000 {method 'match' of 're.Pattern' objects}
        1    0.244    0.244    0.244    0.244 random.py:315(sample)
        1    0.102    0.102 1340.455 1340.455 min_bisection.py:531(solve_iteratively)
       72    0.086    0.001 1324.885   18.401 min_bisection.py:510(_iterate)
    65296    0.083    0.000    0.083    0.000 {method 'remove' of 'set' objects}
   130598    0.067    0.000    0.067    0.000 {built-in method _abc._abc_instancecheck}


