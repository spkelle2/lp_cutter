         5032747 function calls in 113.395 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       11   99.929    9.084   99.931    9.085 min_bisection.py:291(_optimize)
  2433971    3.803    0.000    4.309    0.000 min_bisection.py:338(_get_cut_depth)
       21    2.862    0.136   10.820    0.515 min_bisection.py:402(_recalibrate_cut_depths_by_search_proportion)
       19    2.432    0.128    3.739    0.197 random.py:286(sample)
   544424    0.809    0.000    1.187    0.000 random.py:224(_randbelow)
        1    0.719    0.719    1.804    1.804 min_bisection.py:156(_instantiate_model)
     9294    0.630    0.000    0.661    0.000 min_bisection.py:225(_add_triangle_inequality)
        1    0.604    0.604    0.604    0.604 min_bisection.py:65(<setcomp>)
    32736    0.505    0.000    0.505    0.000 min_bisection.py:376(_get_vals)
     4951    0.426    0.000    0.426    0.000 min_bisection.py:218(<genexpr>)
   890032    0.295    0.000    0.295    0.000 {method 'getrandbits' of '_random.Random' objects}
   520165    0.119    0.000    0.119    0.000 {method 'add' of 'set' objects}
   544424    0.082    0.000    0.082    0.000 {method 'bit_length' of 'int' objects}
        1    0.065    0.065  113.395  113.395 min_bisection.py:426(solve_iteratively)
        1    0.040    0.040    0.040    0.040 min_bisection.py:214(<dictcomp>)
       21    0.019    0.001    0.019    0.001 {built-in method builtins.sorted}
        2    0.013    0.007    0.441    0.221 {gurobipy.gurobipy.quicksum}
    18630    0.012    0.000    0.012    0.000 {built-in method _abc._abc_instancecheck}
     9294    0.010    0.000    0.010    0.000 {method 'remove' of 'set' objects}
    18630    0.009    0.000    0.021    0.000 abc.py:137(__instancecheck__)


