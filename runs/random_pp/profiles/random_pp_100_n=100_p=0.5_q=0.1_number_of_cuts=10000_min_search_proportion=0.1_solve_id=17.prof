         4175562 function calls in 69.137 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        4   56.726   14.181   56.727   14.182 min_bisection.py:291(_optimize)
  2787651    4.195    0.000    4.458    0.000 min_bisection.py:338(_get_cut_depth)
        8    3.393    0.424    9.251    1.156 min_bisection.py:402(_recalibrate_cut_depths_by_search_proportion)
        5    0.876    0.175    1.504    0.301 random.py:286(sample)
    22671    0.857    0.000    0.937    0.000 min_bisection.py:225(_add_triangle_inequality)
        1    0.835    0.835    1.935    1.935 min_bisection.py:156(_instantiate_model)
        1    0.613    0.613    0.613    0.613 min_bisection.py:65(<setcomp>)
     4951    0.431    0.000    0.431    0.000 min_bisection.py:218(<genexpr>)
   267073    0.383    0.000    0.569    0.000 random.py:224(_randbelow)
    12020    0.264    0.000    0.264    0.000 min_bisection.py:376(_get_vals)
   441821    0.146    0.000    0.146    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    0.092    0.092   69.137   69.137 min_bisection.py:426(solve_iteratively)
        8    0.078    0.010    0.078    0.010 {built-in method builtins.sorted}
   253522    0.059    0.000    0.059    0.000 {method 'add' of 'set' objects}
   267073    0.041    0.000    0.041    0.000 {method 'bit_length' of 'int' objects}
        1    0.040    0.040    0.040    0.040 min_bisection.py:214(<dictcomp>)
    45356    0.030    0.000    0.030    0.000 {built-in method _abc._abc_instancecheck}
    22671    0.027    0.000    0.027    0.000 {method 'remove' of 'set' objects}
    45356    0.022    0.000    0.052    0.000 abc.py:137(__instancecheck__)
        8    0.014    0.002    0.092    0.012 min_bisection.py:415(_find_most_violated_constraints)


