         1148887 function calls in 7.125 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        6    4.109    0.685    4.110    0.685 min_bisection.py:291(_optimize)
   558536    0.838    0.000    0.983    0.000 min_bisection.py:338(_get_cut_depth)
        8    0.604    0.075    2.203    0.275 min_bisection.py:402(_recalibrate_cut_depths_by_search_proportion)
        7    0.358    0.051    0.641    0.092 random.py:286(sample)
     2416    0.214    0.000    0.214    0.000 min_bisection.py:218(<genexpr>)
     5100    0.201    0.000    0.219    0.000 min_bisection.py:225(_add_triangle_inequality)
        1    0.184    0.184    0.184    0.184 min_bisection.py:65(<setcomp>)
   135681    0.180    0.000    0.253    0.000 random.py:224(_randbelow)
     8800    0.146    0.000    0.146    0.000 min_bisection.py:376(_get_vals)
        1    0.110    0.110    0.535    0.535 min_bisection.py:156(_instantiate_model)
   166060    0.052    0.000    0.052    0.000 {method 'getrandbits' of '_random.Random' objects}
   108030    0.030    0.000    0.030    0.000 {method 'add' of 'set' objects}
        1    0.023    0.023    7.125    7.125 min_bisection.py:426(solve_iteratively)
   135681    0.020    0.000    0.020    0.000 {method 'bit_length' of 'int' objects}
        1    0.020    0.020    0.020    0.020 min_bisection.py:214(<dictcomp>)
    10218    0.007    0.000    0.008    0.000 {built-in method _abc._abc_instancecheck}
        8    0.007    0.001    0.007    0.001 {built-in method builtins.sorted}
        2    0.007    0.003    0.222    0.111 {gurobipy.gurobipy.quicksum}
    10218    0.006    0.000    0.013    0.000 abc.py:137(__instancecheck__)
     5100    0.005    0.000    0.005    0.000 {method 'remove' of 'set' objects}


