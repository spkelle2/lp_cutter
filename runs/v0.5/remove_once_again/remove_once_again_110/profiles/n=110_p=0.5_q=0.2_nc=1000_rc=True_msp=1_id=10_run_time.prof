         41860237 function calls in 1839.095 seconds

   Ordered by: internal time
   List reduced from 60 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       48 1711.831   35.663 1711.840   35.663 min_bisection.py:305(_optimize)
 41197259   64.020    0.000   67.174    0.000 min_bisection.py:361(_get_cut_depth)
       48   46.801    0.975  113.975    2.374 min_bisection.py:423(_recalibrate_cut_depths_by_search_proportion)
       48    3.900    0.081    3.900    0.081 {built-in method builtins.sorted}
       48    3.515    0.073    3.736    0.078 min_bisection.py:476(_remove_nonreduced_cost_constraints)
   175082    3.154    0.000    3.154    0.000 min_bisection.py:397(_get_vals)
        1    1.661    1.661    1.661    1.661 min_bisection.py:67(<setcomp>)
    46170    1.547    0.000    1.693    0.000 min_bisection.py:238(_add_triangle_inequality)
       48    1.170    0.024  119.045    2.480 min_bisection.py:446(_find_most_violated_constraints)
     5996    0.450    0.000    0.450    0.000 min_bisection.py:231(<genexpr>)
        1    0.413    0.413    0.413    0.413 min_bisection.py:227(<dictcomp>)
        1    0.111    0.111    0.111    0.111 random.py:315(sample)
    46253    0.107    0.000    0.107    0.000 min_bisection.py:489(<listcomp>)
    46253    0.081    0.000    0.081    0.000 {method 'match' of 're.Pattern' objects}
    46170    0.053    0.000    0.053    0.000 {method 'remove' of 'set' objects}
       48    0.053    0.001 1836.370   38.258 min_bisection.py:499(_iterate)
    92346    0.049    0.000    0.049    0.000 {built-in method _abc._abc_instancecheck}
    92346    0.044    0.000    0.093    0.000 abc.py:96(__instancecheck__)
        1    0.041    0.041 1839.095 1839.095 min_bisection.py:517(solve_iteratively)
       47    0.020    0.000    0.020    0.000 {method 'update' of 'set' objects}


