         17708479 function calls in 616.770 seconds

   Ordered by: internal time
   List reduced from 60 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       37  561.608   15.179  561.616   15.179 min_bisection.py:305(_optimize)
 17248224   25.278    0.000   26.808    0.000 min_bisection.py:361(_get_cut_depth)
       37   21.075    0.570   47.884    1.294 min_bisection.py:423(_recalibrate_cut_depths_by_search_proportion)
       37    2.293    0.062    2.468    0.067 min_bisection.py:476(_remove_nonreduced_cost_constraints)
       37    1.592    0.043    1.592    0.043 {built-in method builtins.sorted}
    90742    1.530    0.000    1.530    0.000 min_bisection.py:397(_get_vals)
    35274    1.214    0.000    1.332    0.000 min_bisection.py:238(_add_triangle_inequality)
        1    0.830    0.830    0.830    0.830 min_bisection.py:67(<setcomp>)
       37    0.548    0.015   50.024    1.352 min_bisection.py:446(_find_most_violated_constraints)
     4006    0.300    0.000    0.300    0.000 min_bisection.py:231(<genexpr>)
    34846    0.084    0.000    0.084    0.000 min_bisection.py:489(<listcomp>)
        1    0.069    0.069    0.069    0.069 random.py:315(sample)
    34846    0.064    0.000    0.064    0.000 {method 'match' of 're.Pattern' objects}
    35274    0.043    0.000    0.043    0.000 {method 'remove' of 'set' objects}
       37    0.041    0.001  615.485   16.635 min_bisection.py:499(_iterate)
    70554    0.038    0.000    0.038    0.000 {built-in method _abc._abc_instancecheck}
    70554    0.037    0.000    0.075    0.000 abc.py:96(__instancecheck__)
        1    0.029    0.029    0.029    0.029 min_bisection.py:227(<dictcomp>)
        1    0.021    0.021  616.770  616.770 min_bisection.py:517(solve_iteratively)
       36    0.018    0.000    0.018    0.000 {method 'update' of 'set' objects}


