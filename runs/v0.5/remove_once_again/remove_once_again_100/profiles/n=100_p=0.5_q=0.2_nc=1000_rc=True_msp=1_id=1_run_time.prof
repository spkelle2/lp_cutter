         25584880 function calls in 635.004 seconds

   Ordered by: internal time
   List reduced from 60 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       39  551.302   14.136  551.309   14.136 min_bisection.py:305(_optimize)
 25067082   40.007    0.000   41.701    0.000 min_bisection.py:361(_get_cut_depth)
       39   32.221    0.826   73.922    1.895 min_bisection.py:423(_recalibrate_cut_depths_by_search_proportion)
       39    2.712    0.070    2.712    0.070 {built-in method builtins.sorted}
       39    2.532    0.065    2.717    0.070 min_bisection.py:476(_remove_nonreduced_cost_constraints)
   117217    1.694    0.000    1.694    0.000 min_bisection.py:397(_get_vals)
        1    1.446    1.446    1.446    1.446 min_bisection.py:67(<setcomp>)
    37230    1.282    0.000    1.398    0.000 min_bisection.py:238(_add_triangle_inequality)
       39    0.846    0.022   77.480    1.987 min_bisection.py:446(_find_most_violated_constraints)
     4951    0.380    0.000    0.380    0.000 min_bisection.py:231(<genexpr>)
        1    0.113    0.113    0.113    0.113 random.py:315(sample)
    39178    0.090    0.000    0.090    0.000 min_bisection.py:489(<listcomp>)
    39178    0.065    0.000    0.065    0.000 {method 'match' of 're.Pattern' objects}
       39    0.045    0.001  632.954   16.230 min_bisection.py:499(_iterate)
    37230    0.044    0.000    0.044    0.000 {method 'remove' of 'set' objects}
    74466    0.037    0.000    0.037    0.000 {built-in method _abc._abc_instancecheck}
        1    0.036    0.036    0.036    0.036 min_bisection.py:227(<dictcomp>)
    74466    0.035    0.000    0.072    0.000 abc.py:96(__instancecheck__)
        1    0.031    0.031  635.004  635.004 min_bisection.py:517(solve_iteratively)
       38    0.019    0.001    0.019    0.001 {method 'update' of 'set' objects}


