         24910494 function calls in 716.327 seconds

   Ordered by: internal time
   List reduced from 60 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       38  636.699   16.755  636.707   16.755 min_bisection.py:305(_optimize)
 24421819   37.781    0.000   40.128    0.000 min_bisection.py:361(_get_cut_depth)
       38   30.366    0.799   70.494    1.855 min_bisection.py:423(_recalibrate_cut_depths_by_search_proportion)
       38    2.469    0.065    2.469    0.065 {built-in method builtins.sorted}
       38    2.427    0.064    2.593    0.068 min_bisection.py:476(_remove_nonreduced_cost_constraints)
   114191    2.347    0.000    2.347    0.000 min_bisection.py:397(_get_vals)
        1    1.383    1.383    1.383    1.383 min_bisection.py:67(<setcomp>)
    35682    1.217    0.000    1.325    0.000 min_bisection.py:238(_add_triangle_inequality)
       38    0.722    0.019   73.685    1.939 min_bisection.py:446(_find_most_violated_constraints)
     4951    0.380    0.000    0.380    0.000 min_bisection.py:231(<genexpr>)
        1    0.099    0.099    0.099    0.099 random.py:315(sample)
    35051    0.081    0.000    0.081    0.000 min_bisection.py:489(<listcomp>)
    35051    0.059    0.000    0.059    0.000 {method 'match' of 're.Pattern' objects}
       38    0.043    0.001  714.357   18.799 min_bisection.py:499(_iterate)
    35682    0.040    0.000    0.040    0.000 {method 'remove' of 'set' objects}
        1    0.037    0.037    0.037    0.037 min_bisection.py:227(<dictcomp>)
    71370    0.035    0.000    0.035    0.000 {built-in method _abc._abc_instancecheck}
    71370    0.033    0.000    0.068    0.000 abc.py:96(__instancecheck__)
        1    0.029    0.029  716.327  716.327 min_bisection.py:517(solve_iteratively)
       37    0.018    0.000    0.018    0.000 {method 'update' of 'set' objects}


