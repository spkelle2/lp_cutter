         82104047 function calls in 809.802 seconds

   Ordered by: internal time
   List reduced from 60 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       57  499.783    8.768  499.797    8.768 min_bisection.py:305(_optimize)
 81214407  146.037    0.000  159.883    0.000 min_bisection.py:361(_get_cut_depth)
       57  121.928    2.139  281.810    4.944 min_bisection.py:423(_recalibrate_cut_depths_by_search_proportion)
   288409   13.845    0.000   13.845    0.000 min_bisection.py:397(_get_vals)
       57   10.360    0.182   10.360    0.182 {built-in method builtins.sorted}
        1    6.016    6.016    6.016    6.016 min_bisection.py:67(<setcomp>)
       57    5.652    0.099    5.941    0.104 min_bisection.py:476(_remove_nonreduced_cost_constraints)
       57    2.520    0.044  294.690    5.170 min_bisection.py:446(_find_most_violated_constraints)
    55608    1.940    0.000    2.125    0.000 min_bisection.py:238(_add_triangle_inequality)
     8386    0.644    0.000    0.644    0.000 min_bisection.py:231(<genexpr>)
        1    0.282    0.282    0.283    0.283 random.py:315(sample)
    59850    0.135    0.000    0.135    0.000 min_bisection.py:489(<listcomp>)
    59850    0.110    0.000    0.110    0.000 {method 'match' of 're.Pattern' objects}
        1    0.087    0.087  809.802  809.802 min_bisection.py:517(solve_iteratively)
    55608    0.072    0.000    0.072    0.000 {method 'remove' of 'set' objects}
       57    0.070    0.001  802.629   14.081 min_bisection.py:499(_iterate)
        1    0.063    0.063    0.063    0.063 min_bisection.py:227(<dictcomp>)
   111222    0.057    0.000    0.114    0.000 abc.py:96(__instancecheck__)
   111222    0.057    0.000    0.057    0.000 {built-in method _abc._abc_instancecheck}
       56    0.031    0.001    0.031    0.001 {method 'update' of 'set' objects}


