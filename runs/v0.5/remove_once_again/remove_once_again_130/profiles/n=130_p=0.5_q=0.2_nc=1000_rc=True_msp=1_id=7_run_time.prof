         84979048 function calls in 838.290 seconds

   Ordered by: internal time
   List reduced from 60 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       59  519.454    8.804  519.468    8.805 min_bisection.py:305(_optimize)
 84059812  151.603    0.000  160.252    0.000 min_bisection.py:361(_get_cut_depth)
       59  130.008    2.204  290.260    4.920 min_bisection.py:423(_recalibrate_cut_depths_by_search_proportion)
       59   11.286    0.191   11.286    0.191 {built-in method builtins.sorted}
   297622    8.648    0.000    8.648    0.000 min_bisection.py:397(_get_vals)
       59    5.873    0.100    6.168    0.105 min_bisection.py:476(_remove_nonreduced_cost_constraints)
        1    5.061    5.061    5.061    5.061 min_bisection.py:67(<setcomp>)
       59    2.691    0.046  304.237    5.157 min_bisection.py:446(_find_most_violated_constraints)
    57608    2.008    0.000    2.200    0.000 min_bisection.py:238(_add_triangle_inequality)
     8386    0.634    0.000    0.634    0.000 min_bisection.py:231(<genexpr>)
        1    0.236    0.236    0.236    0.236 random.py:315(sample)
    62040    0.139    0.000    0.139    0.000 min_bisection.py:489(<listcomp>)
    62040    0.111    0.000    0.111    0.000 {method 'match' of 're.Pattern' objects}
        1    0.076    0.076  838.290  838.290 min_bisection.py:517(solve_iteratively)
    57608    0.074    0.000    0.074    0.000 {method 'remove' of 'set' objects}
       59    0.072    0.001  832.156   14.104 min_bisection.py:499(_iterate)
   115222    0.059    0.000    0.059    0.000 {built-in method _abc._abc_instancecheck}
   115222    0.059    0.000    0.118    0.000 abc.py:96(__instancecheck__)
        1    0.058    0.058    0.058    0.058 min_bisection.py:227(<dictcomp>)
       58    0.032    0.001    0.032    0.001 {method 'update' of 'set' objects}


