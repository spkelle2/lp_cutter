         6565830 function calls in 25.652 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    7.856    7.856    7.856    7.856 min_bisection.py:65(<setcomp>)
  4084506    6.277    0.000    6.844    0.000 min_bisection.py:340(_get_cut_depth)
        5    4.239    0.848   13.736    2.747 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        4    1.662    0.416    2.870    0.717 random.py:286(sample)
        1    0.872    0.872   10.293   10.293 min_bisection.py:156(_instantiate_model)
     9731    0.846    0.000    0.846    0.000 min_bisection.py:219(<genexpr>)
    20100    0.753    0.000    0.821    0.000 min_bisection.py:226(_add_triangle_inequality)
   562916    0.747    0.000    1.055    0.000 random.py:224(_randbelow)
        1    0.689    0.689    0.689    0.689 min_bisection.py:215(<dictcomp>)
    17835    0.568    0.000    0.568    0.000 min_bisection.py:378(_get_vals)
        3    0.433    0.144    0.434    0.145 min_bisection.py:293(_optimize)
   663071    0.225    0.000    0.225    0.000 {method 'getrandbits' of '_random.Random' objects}
   534166    0.153    0.000    0.153    0.000 {method 'add' of 'set' objects}
        1    0.132    0.132   25.652   25.652 min_bisection.py:428(solve_iteratively)
   562916    0.083    0.000    0.083    0.000 {method 'bit_length' of 'int' objects}
    40212    0.027    0.000    0.027    0.000 {built-in method _abc._abc_instancecheck}
        2    0.025    0.012    0.876    0.438 {gurobipy.gurobipy.quicksum}
    20100    0.021    0.000    0.021    0.000 {method 'remove' of 'set' objects}
    40212    0.019    0.000    0.047    0.000 abc.py:137(__instancecheck__)
        5    0.014    0.003    0.014    0.003 {built-in method builtins.sorted}


