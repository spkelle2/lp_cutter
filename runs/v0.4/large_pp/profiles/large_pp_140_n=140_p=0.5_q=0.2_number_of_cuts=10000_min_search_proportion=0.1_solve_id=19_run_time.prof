         8543305 function calls in 6921.578 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        5 6890.710 1378.142 6890.711 1378.142 min_bisection.py:293(_optimize)
  4395550    7.801    0.000    9.416    0.000 min_bisection.py:340(_get_cut_depth)
        1    7.333    7.333    7.333    7.333 min_bisection.py:65(<setcomp>)
        7    4.917    0.702   18.773    2.682 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        6    2.654    0.442    4.665    0.778 random.py:286(sample)
    40100    2.140    0.000    2.278    0.000 min_bisection.py:226(_add_triangle_inequality)
    29617    1.615    0.000    1.615    0.000 min_bisection.py:378(_get_vals)
   932883    1.230    0.000    1.746    0.000 random.py:224(_randbelow)
        1    0.934    0.934    9.221    9.221 min_bisection.py:156(_instantiate_model)
     9731    0.846    0.000    0.846    0.000 min_bisection.py:219(<genexpr>)
  1106536    0.378    0.000    0.378    0.000 {method 'getrandbits' of '_random.Random' objects}
   885210    0.265    0.000    0.265    0.000 {method 'add' of 'set' objects}
        1    0.210    0.210 6921.578 6921.578 min_bisection.py:428(solve_iteratively)
   932883    0.137    0.000    0.137    0.000 {method 'bit_length' of 'int' objects}
        7    0.134    0.019    0.134    0.019 {built-in method builtins.sorted}
        1    0.078    0.078    0.078    0.078 min_bisection.py:215(<dictcomp>)
    80216    0.055    0.000    0.055    0.000 {built-in method _abc._abc_instancecheck}
    40100    0.044    0.000    0.044    0.000 {method 'remove' of 'set' objects}
    80216    0.039    0.000    0.094    0.000 abc.py:137(__instancecheck__)
        7    0.025    0.004    0.159    0.023 min_bisection.py:417(_find_most_violated_constraints)


