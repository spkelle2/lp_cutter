         6564348 function calls in 26.805 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    7.792    7.792    7.792    7.792 min_bisection.py:65(<setcomp>)
  4084506    6.402    0.000    6.916    0.000 min_bisection.py:340(_get_cut_depth)
        5    4.995    0.999   14.580    2.916 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        4    1.673    0.418    2.891    0.723 random.py:286(sample)
        1    0.889    0.889   10.261   10.261 min_bisection.py:156(_instantiate_model)
     9731    0.848    0.000    0.848    0.000 min_bisection.py:219(<genexpr>)
    20100    0.757    0.000    0.823    0.000 min_bisection.py:226(_add_triangle_inequality)
        3    0.756    0.252    0.757    0.252 min_bisection.py:293(_optimize)
   562414    0.749    0.000    1.060    0.000 random.py:224(_randbelow)
        1    0.702    0.702    0.702    0.702 min_bisection.py:215(<dictcomp>)
    17803    0.513    0.000    0.513    0.000 min_bisection.py:378(_get_vals)
   662625    0.228    0.000    0.228    0.000 {method 'getrandbits' of '_random.Random' objects}
   534166    0.157    0.000    0.157    0.000 {method 'add' of 'set' objects}
        1    0.140    0.140   26.805   26.805 min_bisection.py:428(solve_iteratively)
   562414    0.083    0.000    0.083    0.000 {method 'bit_length' of 'int' objects}
    40212    0.027    0.000    0.027    0.000 {built-in method _abc._abc_instancecheck}
        2    0.025    0.012    0.878    0.439 {gurobipy.gurobipy.quicksum}
    20100    0.021    0.000    0.021    0.000 {method 'remove' of 'set' objects}
    40212    0.019    0.000    0.046    0.000 abc.py:137(__instancecheck__)
        5    0.017    0.003    0.017    0.003 {built-in method builtins.sorted}


