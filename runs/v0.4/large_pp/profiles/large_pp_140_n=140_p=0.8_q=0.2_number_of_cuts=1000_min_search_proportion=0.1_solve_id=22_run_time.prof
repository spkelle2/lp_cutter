         13243253 function calls in 41.772 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    8.768    8.768    8.768    8.768 min_bisection.py:65(<setcomp>)
  5349160    8.615    0.000   11.049    0.000 min_bisection.py:340(_get_cut_depth)
       12    6.463    0.539   26.465    2.205 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
       11    5.080    0.462    9.167    0.833 random.py:286(sample)
       10    3.297    0.330    3.299    0.330 min_bisection.py:293(_optimize)
  1881489    2.521    0.000    3.565    0.000 random.py:224(_randbelow)
    59310    2.434    0.000    2.434    0.000 min_bisection.py:378(_get_vals)
        1    0.886    0.886   11.187   11.187 min_bisection.py:156(_instantiate_model)
     9731    0.843    0.000    0.843    0.000 min_bisection.py:219(<genexpr>)
  2210844    0.762    0.000    0.762    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    0.660    0.660    0.660    0.660 min_bisection.py:215(<dictcomp>)
  1785820    0.521    0.000    0.521    0.000 {method 'add' of 'set' objects}
     9100    0.352    0.000    0.382    0.000 min_bisection.py:226(_add_triangle_inequality)
  1881489    0.283    0.000    0.283    0.000 {method 'bit_length' of 'int' objects}
        1    0.165    0.165   41.772   41.772 min_bisection.py:428(solve_iteratively)
       12    0.054    0.004    0.054    0.004 {built-in method builtins.sorted}
        2    0.025    0.012    0.874    0.437 {gurobipy.gurobipy.quicksum}
    18226    0.013    0.000    0.013    0.000 {built-in method _abc._abc_instancecheck}
     9100    0.010    0.000    0.010    0.000 {method 'remove' of 'set' objects}
    18226    0.009    0.000    0.022    0.000 abc.py:137(__instancecheck__)


