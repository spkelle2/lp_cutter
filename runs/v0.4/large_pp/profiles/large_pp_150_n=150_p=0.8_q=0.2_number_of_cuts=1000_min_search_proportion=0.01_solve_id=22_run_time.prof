         7678953 function calls in 33.255 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    9.365    9.365    9.365    9.365 min_bisection.py:65(<setcomp>)
       14    5.115    0.365    7.323    0.523 random.py:286(sample)
  3075290    5.076    0.000    7.033    0.000 min_bisection.py:340(_get_cut_depth)
       14    4.895    0.350   18.975    1.355 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
       10    2.145    0.215    2.147    0.215 min_bisection.py:293(_optimize)
    67900    1.957    0.000    1.957    0.000 min_bisection.py:378(_get_vals)
   915684    1.342    0.000    1.972    0.000 random.py:224(_randbelow)
    11176    0.953    0.000    0.953    0.000 min_bisection.py:219(<genexpr>)
        1    0.906    0.906    0.906    0.906 min_bisection.py:215(<dictcomp>)
  1747020    0.496    0.000    0.496    0.000 {method 'getrandbits' of '_random.Random' objects}
     9100    0.347    0.000    0.377    0.000 min_bisection.py:226(_add_triangle_inequality)
   879290    0.234    0.000    0.234    0.000 {method 'add' of 'set' objects}
        1    0.173    0.173   33.255   33.255 min_bisection.py:428(solve_iteratively)
   915684    0.134    0.000    0.134    0.000 {method 'bit_length' of 'int' objects}
        1    0.034    0.034   11.293   11.293 min_bisection.py:156(_instantiate_model)
        2    0.028    0.014    0.987    0.494 {gurobipy.gurobipy.quicksum}
    18232    0.012    0.000    0.013    0.000 {built-in method _abc._abc_instancecheck}
       14    0.011    0.001    0.011    0.001 {built-in method builtins.sorted}
     9100    0.010    0.000    0.010    0.000 {method 'remove' of 'set' objects}
    18232    0.009    0.000    0.021    0.000 abc.py:137(__instancecheck__)


