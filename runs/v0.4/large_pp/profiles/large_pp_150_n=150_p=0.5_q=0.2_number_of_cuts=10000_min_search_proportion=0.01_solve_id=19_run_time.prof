         9806927 function calls in 12648.675 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        5 12613.259 2522.652 12613.260 2522.652 min_bisection.py:293(_optimize)
        1    9.177    9.177    9.177    9.177 min_bisection.py:65(<setcomp>)
       11    6.072    0.552   22.047    2.004 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
  3366905    5.813    0.000    8.251    0.000 min_bisection.py:340(_get_cut_depth)
       11    4.920    0.447    8.007    0.728 random.py:286(sample)
    34046    2.438    0.000    2.438    0.000 min_bisection.py:378(_get_vals)
  1261270    1.873    0.000    2.744    0.000 random.py:224(_randbelow)
    40100    1.489    0.000    1.624    0.000 min_bisection.py:226(_add_triangle_inequality)
    11176    0.953    0.000    0.953    0.000 min_bisection.py:219(<genexpr>)
        1    0.936    0.936    0.936    0.936 min_bisection.py:215(<dictcomp>)
  2417921    0.686    0.000    0.686    0.000 {method 'getrandbits' of '_random.Random' objects}
  1201905    0.342    0.000    0.342    0.000 {method 'add' of 'set' objects}
        1    0.217    0.217 12648.675 12648.675 min_bisection.py:428(solve_iteratively)
  1261270    0.185    0.000    0.185    0.000 {method 'bit_length' of 'int' objects}
       11    0.091    0.008    0.091    0.008 {built-in method builtins.sorted}
    80226    0.053    0.000    0.053    0.000 {built-in method _abc._abc_instancecheck}
    40100    0.045    0.000    0.045    0.000 {method 'remove' of 'set' objects}
    80226    0.038    0.000    0.091    0.000 abc.py:137(__instancecheck__)
        1    0.035    0.035   11.135   11.135 min_bisection.py:156(_instantiate_model)
        2    0.028    0.014    0.987    0.493 {gurobipy.gurobipy.quicksum}


