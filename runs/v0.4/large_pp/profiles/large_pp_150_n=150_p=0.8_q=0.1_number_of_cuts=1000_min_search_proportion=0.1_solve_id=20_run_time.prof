         15289333 function calls in 49.743 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1   17.325   17.325   17.325   17.325 min_bisection.py:65(<setcomp>)
  6158480    9.675    0.000   12.221    0.000 min_bisection.py:340(_get_cut_depth)
       10    7.238    0.724   28.552    2.855 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        9    4.852    0.539    9.349    1.039 random.py:286(sample)
  1855773    2.735    0.000    4.025    0.000 random.py:224(_randbelow)
    54412    2.545    0.000    2.545    0.000 min_bisection.py:378(_get_vals)
        1    1.388    1.388   19.794   19.794 min_bisection.py:156(_instantiate_model)
  3537690    1.015    0.000    1.015    0.000 {method 'getrandbits' of '_random.Random' objects}
    11176    0.959    0.000    0.959    0.000 min_bisection.py:219(<genexpr>)
        8    0.607    0.076    0.608    0.076 min_bisection.py:293(_optimize)
  1761380    0.472    0.000    0.472    0.000 {method 'add' of 'set' objects}
  1855773    0.274    0.000    0.274    0.000 {method 'bit_length' of 'int' objects}
     7100    0.273    0.000    0.297    0.000 min_bisection.py:226(_add_triangle_inequality)
        1    0.192    0.192   49.743   49.743 min_bisection.py:428(solve_iteratively)
        1    0.088    0.088    0.088    0.088 min_bisection.py:215(<dictcomp>)
       10    0.040    0.004    0.040    0.004 {built-in method builtins.sorted}
        2    0.028    0.014    0.994    0.497 {gurobipy.gurobipy.quicksum}
    14222    0.010    0.000    0.010    0.000 {built-in method _abc._abc_instancecheck}
     7100    0.007    0.000    0.007    0.000 {method 'remove' of 'set' objects}
    14222    0.007    0.000    0.017    0.000 abc.py:137(__instancecheck__)


