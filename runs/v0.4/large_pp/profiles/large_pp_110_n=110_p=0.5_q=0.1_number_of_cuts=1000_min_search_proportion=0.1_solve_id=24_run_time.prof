         6440076 function calls in 58.350 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       10   39.532    3.953   39.534    3.953 min_bisection.py:293(_optimize)
  2568904    4.064    0.000    5.409    0.000 min_bisection.py:340(_get_cut_depth)
        1    3.731    3.731    3.731    3.731 min_bisection.py:65(<setcomp>)
       12    3.268    0.272   13.278    1.106 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
       11    2.706    0.246    4.724    0.429 random.py:286(sample)
    36465    1.346    0.000    1.346    0.000 min_bisection.py:378(_get_vals)
   904407    1.279    0.000    1.774    0.000 random.py:224(_randbelow)
        1    0.559    0.559    4.887    4.887 min_bisection.py:156(_instantiate_model)
     5996    0.529    0.000    0.529    0.000 min_bisection.py:219(<genexpr>)
  1104079    0.361    0.000    0.361    0.000 {method 'getrandbits' of '_random.Random' objects}
     8314    0.327    0.000    0.356    0.000 min_bisection.py:226(_add_triangle_inequality)
   858858    0.243    0.000    0.243    0.000 {method 'add' of 'set' objects}
   904407    0.133    0.000    0.133    0.000 {method 'bit_length' of 'int' objects}
        1    0.108    0.108   58.350   58.350 min_bisection.py:428(solve_iteratively)
       12    0.056    0.005    0.056    0.005 {built-in method builtins.sorted}
        1    0.049    0.049    0.049    0.049 min_bisection.py:215(<dictcomp>)
        2    0.015    0.008    0.548    0.274 {gurobipy.gurobipy.quicksum}
    16654    0.012    0.000    0.012    0.000 {built-in method _abc._abc_instancecheck}
     8314    0.009    0.000    0.009    0.000 {method 'remove' of 'set' objects}
    16654    0.009    0.000    0.021    0.000 abc.py:137(__instancecheck__)


