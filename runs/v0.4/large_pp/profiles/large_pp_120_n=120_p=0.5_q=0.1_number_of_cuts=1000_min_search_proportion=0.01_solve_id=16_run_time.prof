         5258135 function calls in 338.341 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       13  320.675   24.667  320.678   24.668 min_bisection.py:293(_optimize)
  2702434    4.499    0.000    5.401    0.000 min_bisection.py:340(_get_cut_depth)
       18    3.829    0.213   13.310    0.739 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
       17    2.965    0.174    4.198    0.247 random.py:286(sample)
        1    2.522    2.522    2.522    2.522 min_bisection.py:65(<setcomp>)
    55988    0.903    0.000    0.903    0.000 min_bisection.py:378(_get_vals)
    12100    0.849    0.000    0.890    0.000 min_bisection.py:226(_add_triangle_inequality)
   497649    0.755    0.000    1.105    0.000 random.py:224(_randbelow)
     7141    0.597    0.000    0.597    0.000 min_bisection.py:219(<genexpr>)
   937071    0.275    0.000    0.275    0.000 {method 'getrandbits' of '_random.Random' objects}
   479014    0.127    0.000    0.127    0.000 {method 'add' of 'set' objects}
        1    0.105    0.105  338.341  338.341 min_bisection.py:428(solve_iteratively)
   497649    0.075    0.000    0.075    0.000 {method 'bit_length' of 'int' objects}
        1    0.058    0.058    0.058    0.058 min_bisection.py:215(<dictcomp>)
        1    0.022    0.022    3.222    3.222 min_bisection.py:156(_instantiate_model)
        2    0.019    0.009    0.620    0.310 {gurobipy.gurobipy.quicksum}
    24238    0.017    0.000    0.017    0.000 {built-in method _abc._abc_instancecheck}
    12100    0.013    0.000    0.013    0.000 {method 'remove' of 'set' objects}
       18    0.013    0.001    0.013    0.001 {built-in method builtins.sorted}
    24238    0.012    0.000    0.029    0.000 abc.py:137(__instancecheck__)


