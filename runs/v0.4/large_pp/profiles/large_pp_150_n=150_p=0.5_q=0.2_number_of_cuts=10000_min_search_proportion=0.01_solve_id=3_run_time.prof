         9806680 function calls in 7899.600 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        5 7867.143 1573.429 7867.144 1573.429 min_bisection.py:293(_optimize)
        1    8.102    8.102    8.102    8.102 min_bisection.py:65(<setcomp>)
  3366905    6.293    0.000    6.881    0.000 min_bisection.py:340(_get_cut_depth)
       11    6.102    0.555   20.412    1.856 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
       11    4.650    0.423    7.669    0.697 random.py:286(sample)
  1261015    1.822    0.000    2.688    0.000 random.py:224(_randbelow)
    40100    1.475    0.000    1.611    0.000 min_bisection.py:226(_add_triangle_inequality)
    11176    0.955    0.000    0.955    0.000 min_bisection.py:219(<genexpr>)
        1    0.751    0.751    0.751    0.751 min_bisection.py:215(<dictcomp>)
  2418160    0.681    0.000    0.681    0.000 {method 'getrandbits' of '_random.Random' objects}
    34070    0.589    0.000    0.589    0.000 min_bisection.py:378(_get_vals)
  1201905    0.330    0.000    0.330    0.000 {method 'add' of 'set' objects}
        1    0.215    0.215 7899.600 7899.600 min_bisection.py:428(solve_iteratively)
  1261015    0.184    0.000    0.184    0.000 {method 'bit_length' of 'int' objects}
       11    0.081    0.007    0.081    0.007 {built-in method builtins.sorted}
    80226    0.053    0.000    0.053    0.000 {built-in method _abc._abc_instancecheck}
    40100    0.045    0.000    0.045    0.000 {method 'remove' of 'set' objects}
    80226    0.038    0.000    0.092    0.000 abc.py:137(__instancecheck__)
        1    0.033    0.033    9.875    9.875 min_bisection.py:156(_instantiate_model)
        2    0.028    0.014    0.989    0.495 {gurobipy.gurobipy.quicksum}


