         12278199 function calls in 37.163 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    9.100    9.100    9.100    9.100 min_bisection.py:65(<setcomp>)
  5173038    8.285    0.000   10.556    0.000 min_bisection.py:340(_get_cut_depth)
       11    6.139    0.558   24.687    2.244 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
       10    4.589    0.459    8.209    0.821 random.py:286(sample)
    53396    2.271    0.000    2.271    0.000 min_bisection.py:378(_get_vals)
  1693755    2.234    0.000    3.158    0.000 random.py:224(_randbelow)
        1    0.896    0.896   10.946   10.946 min_bisection.py:156(_instantiate_model)
     9731    0.843    0.000    0.843    0.000 min_bisection.py:219(<genexpr>)
        9    0.766    0.085    0.768    0.085 min_bisection.py:293(_optimize)
  1987519    0.676    0.000    0.676    0.000 {method 'getrandbits' of '_random.Random' objects}
  1607698    0.461    0.000    0.461    0.000 {method 'add' of 'set' objects}
     8100    0.311    0.000    0.339    0.000 min_bisection.py:226(_add_triangle_inequality)
  1693755    0.248    0.000    0.248    0.000 {method 'bit_length' of 'int' objects}
        1    0.157    0.157   37.163   37.163 min_bisection.py:428(solve_iteratively)
        1    0.077    0.077    0.077    0.077 min_bisection.py:215(<dictcomp>)
       11    0.043    0.004    0.043    0.004 {built-in method builtins.sorted}
        2    0.024    0.012    0.873    0.437 {gurobipy.gurobipy.quicksum}
    16224    0.011    0.000    0.011    0.000 {built-in method _abc._abc_instancecheck}
     8100    0.009    0.000    0.009    0.000 {method 'remove' of 'set' objects}
    16224    0.008    0.000    0.019    0.000 abc.py:137(__instancecheck__)


