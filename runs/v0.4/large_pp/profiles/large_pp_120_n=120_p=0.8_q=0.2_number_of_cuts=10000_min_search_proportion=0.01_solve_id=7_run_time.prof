         4573712 function calls in 14.025 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2589723    3.962    0.000    4.168    0.000 min_bisection.py:340(_get_cut_depth)
        8    2.871    0.359    9.225    1.153 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        1    2.265    2.265    2.265    2.265 min_bisection.py:65(<setcomp>)
        7    1.352    0.193    2.305    0.329 random.py:286(sample)
        3    0.658    0.219    0.659    0.220 min_bisection.py:293(_optimize)
     7141    0.598    0.000    0.598    0.000 min_bisection.py:219(<genexpr>)
   385980    0.590    0.000    0.859    0.000 random.py:224(_randbelow)
    14849    0.568    0.000    0.619    0.000 min_bisection.py:226(_add_triangle_inequality)
        1    0.407    0.407    0.407    0.407 min_bisection.py:215(<dictcomp>)
   727145    0.211    0.000    0.211    0.000 {method 'getrandbits' of '_random.Random' objects}
    13037    0.205    0.000    0.205    0.000 min_bisection.py:378(_get_vals)
   368052    0.093    0.000    0.093    0.000 {method 'add' of 'set' objects}
        1    0.079    0.079   14.025   14.025 min_bisection.py:428(solve_iteratively)
   385980    0.058    0.000    0.058    0.000 {method 'bit_length' of 'int' objects}
        1    0.022    0.022    3.314    3.314 min_bisection.py:156(_instantiate_model)
    29716    0.020    0.000    0.021    0.000 {built-in method _abc._abc_instancecheck}
        2    0.019    0.009    0.621    0.310 {gurobipy.gurobipy.quicksum}
    14849    0.016    0.000    0.016    0.000 {method 'remove' of 'set' objects}
    29716    0.014    0.000    0.035    0.000 abc.py:137(__instancecheck__)
        8    0.006    0.001    0.006    0.001 {built-in method builtins.sorted}


