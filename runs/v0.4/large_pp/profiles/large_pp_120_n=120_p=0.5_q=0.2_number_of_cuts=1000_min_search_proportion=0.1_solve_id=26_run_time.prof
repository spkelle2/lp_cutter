         10785200 function calls in 1172.078 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       14 1146.124   81.866 1146.127   81.866 min_bisection.py:293(_optimize)
       15    4.459    0.297    8.546    0.570 random.py:286(sample)
  2673724    4.447    0.000    7.374    0.000 min_bisection.py:340(_get_cut_depth)
       15    4.006    0.267   19.806    1.320 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        1    3.522    3.522    3.522    3.522 min_bisection.py:65(<setcomp>)
    60769    2.927    0.000    2.927    0.000 min_bisection.py:378(_get_vals)
  1648095    2.505    0.000    3.687    0.000 random.py:224(_randbelow)
  3096586    0.923    0.000    0.923    0.000 {method 'getrandbits' of '_random.Random' objects}
     7141    0.607    0.000    0.607    0.000 min_bisection.py:219(<genexpr>)
    13100    0.523    0.000    0.571    0.000 min_bisection.py:226(_add_triangle_inequality)
        1    0.517    0.517    5.088    5.088 min_bisection.py:156(_instantiate_model)
        1    0.419    0.419    0.419    0.419 min_bisection.py:215(<dictcomp>)
  1563564    0.398    0.000    0.398    0.000 {method 'add' of 'set' objects}
  1648095    0.259    0.000    0.259    0.000 {method 'bit_length' of 'int' objects}
        1    0.198    0.198 1172.078 1172.078 min_bisection.py:428(solve_iteratively)
       15    0.157    0.010    0.157    0.010 {built-in method builtins.sorted}
        2    0.019    0.009    0.630    0.315 {gurobipy.gurobipy.quicksum}
    26234    0.018    0.000    0.019    0.000 {built-in method _abc._abc_instancecheck}
    13100    0.016    0.000    0.016    0.000 {method 'remove' of 'set' objects}
    26234    0.013    0.000    0.032    0.000 abc.py:137(__instancecheck__)


