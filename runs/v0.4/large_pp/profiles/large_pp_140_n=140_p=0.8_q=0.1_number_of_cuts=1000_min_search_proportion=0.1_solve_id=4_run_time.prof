         11315444 function calls in 39.041 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1   11.725   11.725   11.725   11.725 min_bisection.py:65(<setcomp>)
  4997018    7.914    0.000   10.307    0.000 min_bisection.py:340(_get_cut_depth)
       10    6.134    0.613   23.985    2.399 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        9    4.483    0.498    7.790    0.866 random.py:286(sample)
    47590    2.393    0.000    2.393    0.000 min_bisection.py:378(_get_vals)
  1505876    2.016    0.000    2.849    0.000 random.py:224(_randbelow)
        1    1.102    1.102   13.779   13.779 min_bisection.py:156(_instantiate_model)
     9731    0.846    0.000    0.846    0.000 min_bisection.py:219(<genexpr>)
  1767758    0.613    0.000    0.613    0.000 {method 'getrandbits' of '_random.Random' objects}
        8    0.553    0.069    0.554    0.069 min_bisection.py:293(_optimize)
  1429494    0.458    0.000    0.458    0.000 {method 'add' of 'set' objects}
     6916    0.270    0.000    0.294    0.000 min_bisection.py:226(_add_triangle_inequality)
  1505876    0.221    0.000    0.221    0.000 {method 'bit_length' of 'int' objects}
        1    0.149    0.149   39.041   39.041 min_bisection.py:428(solve_iteratively)
        1    0.077    0.077    0.077    0.077 min_bisection.py:215(<dictcomp>)
       10    0.029    0.003    0.029    0.003 {built-in method builtins.sorted}
        2    0.024    0.012    0.876    0.438 {gurobipy.gurobipy.quicksum}
    13854    0.010    0.000    0.010    0.000 {built-in method _abc._abc_instancecheck}
     6916    0.008    0.000    0.008    0.000 {method 'remove' of 'set' objects}
    13854    0.007    0.000    0.017    0.000 abc.py:137(__instancecheck__)


