         11633445 function calls in 127.704 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       12   99.386    8.282   99.389    8.282 min_bisection.py:293(_optimize)
  4681677    7.649    0.000    9.536    0.000 min_bisection.py:340(_get_cut_depth)
       15    5.809    0.387   22.406    1.494 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
       13    3.688    0.284    7.178    0.552 random.py:286(sample)
        1    3.546    3.546    3.546    3.546 min_bisection.py:65(<setcomp>)
  1413497    2.152    0.000    3.145    0.000 random.py:224(_randbelow)
    52176    1.886    0.000    1.886    0.000 min_bisection.py:378(_get_vals)
  2652151    0.777    0.000    0.777    0.000 {method 'getrandbits' of '_random.Random' objects}
     7141    0.600    0.000    0.600    0.000 min_bisection.py:219(<genexpr>)
        1    0.500    0.500    5.084    5.084 min_bisection.py:156(_instantiate_model)
    10568    0.419    0.000    0.456    0.000 min_bisection.py:226(_add_triangle_inequality)
        1    0.414    0.414    0.414    0.414 min_bisection.py:215(<dictcomp>)
  1341465    0.345    0.000    0.345    0.000 {method 'add' of 'set' objects}
  1413497    0.215    0.000    0.215    0.000 {method 'bit_length' of 'int' objects}
        1    0.148    0.148  127.704  127.704 min_bisection.py:428(solve_iteratively)
       15    0.096    0.006    0.096    0.006 {built-in method builtins.sorted}
        2    0.019    0.009    0.623    0.312 {gurobipy.gurobipy.quicksum}
    21166    0.015    0.000    0.015    0.000 {built-in method _abc._abc_instancecheck}
    10568    0.012    0.000    0.012    0.000 {method 'remove' of 'set' objects}
    21166    0.011    0.000    0.026    0.000 abc.py:137(__instancecheck__)


