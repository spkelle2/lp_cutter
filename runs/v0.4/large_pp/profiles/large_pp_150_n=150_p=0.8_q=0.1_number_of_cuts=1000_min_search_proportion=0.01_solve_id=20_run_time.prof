         10944452 function calls in 38.867 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  5453168    9.850    0.000   10.762    0.000 min_bisection.py:340(_get_cut_depth)
        1    9.646    9.646    9.646    9.646 min_bisection.py:65(<setcomp>)
       14    7.426    0.530   25.986    1.856 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
       13    5.411    0.416    8.094    0.623 random.py:286(sample)
  1104466    1.632    0.000    2.399    0.000 random.py:224(_randbelow)
        1    0.977    0.977    0.977    0.977 min_bisection.py:215(<dictcomp>)
    11176    0.957    0.000    0.957    0.000 min_bisection.py:219(<genexpr>)
    54548    0.913    0.000    0.913    0.000 min_bisection.py:378(_get_vals)
  2105831    0.603    0.000    0.603    0.000 {method 'getrandbits' of '_random.Random' objects}
        8    0.448    0.056    0.450    0.056 min_bisection.py:293(_optimize)
  1056068    0.284    0.000    0.284    0.000 {method 'add' of 'set' objects}
     7100    0.275    0.000    0.299    0.000 min_bisection.py:226(_add_triangle_inequality)
        1    0.169    0.169   38.867   38.867 min_bisection.py:428(solve_iteratively)
  1104466    0.164    0.000    0.164    0.000 {method 'bit_length' of 'int' objects}
        1    0.034    0.034   11.648   11.648 min_bisection.py:156(_instantiate_model)
        2    0.028    0.014    0.991    0.496 {gurobipy.gurobipy.quicksum}
       14    0.014    0.001    0.014    0.001 {built-in method builtins.sorted}
    14230    0.010    0.000    0.010    0.000 {built-in method _abc._abc_instancecheck}
     7100    0.008    0.000    0.008    0.000 {method 'remove' of 'set' objects}
    14230    0.007    0.000    0.017    0.000 abc.py:137(__instancecheck__)


