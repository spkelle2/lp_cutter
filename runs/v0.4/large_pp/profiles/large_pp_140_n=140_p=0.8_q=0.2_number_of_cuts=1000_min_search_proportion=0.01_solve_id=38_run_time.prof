         7382988 function calls in 27.105 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  4261164    6.884    0.000    8.375    0.000 min_bisection.py:340(_get_cut_depth)
       14    5.428    0.388   19.038    1.360 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        1    4.989    4.989    4.989    4.989 min_bisection.py:65(<setcomp>)
       13    3.918    0.301    5.463    0.420 random.py:286(sample)
    53190    1.492    0.000    1.492    0.000 min_bisection.py:378(_get_vals)
   725464    0.950    0.000    1.346    0.000 random.py:224(_randbelow)
     9731    0.839    0.000    0.839    0.000 min_bisection.py:219(<genexpr>)
        9    0.763    0.085    0.765    0.085 min_bisection.py:293(_optimize)
        1    0.707    0.707    0.707    0.707 min_bisection.py:215(<dictcomp>)
     8100    0.310    0.000    0.337    0.000 min_bisection.py:226(_add_triangle_inequality)
   852784    0.289    0.000    0.289    0.000 {method 'getrandbits' of '_random.Random' objects}
   695824    0.198    0.000    0.198    0.000 {method 'add' of 'set' objects}
        1    0.131    0.131   27.105   27.105 min_bisection.py:428(solve_iteratively)
   725464    0.106    0.000    0.106    0.000 {method 'bit_length' of 'int' objects}
        1    0.029    0.029    6.593    6.593 min_bisection.py:156(_instantiate_model)
        2    0.024    0.012    0.869    0.434 {gurobipy.gurobipy.quicksum}
    16230    0.011    0.000    0.011    0.000 {built-in method _abc._abc_instancecheck}
       14    0.010    0.001    0.010    0.001 {built-in method builtins.sorted}
     8100    0.008    0.000    0.008    0.000 {method 'remove' of 'set' objects}
    16230    0.008    0.000    0.019    0.000 abc.py:137(__instancecheck__)


