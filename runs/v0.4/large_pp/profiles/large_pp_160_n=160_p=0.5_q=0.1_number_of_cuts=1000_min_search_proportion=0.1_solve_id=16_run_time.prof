         29091438 function calls in 760.705 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       17  678.585   39.917  678.589   39.917 min_bisection.py:293(_optimize)
        1   19.803   19.803   19.803   19.803 min_bisection.py:65(<setcomp>)
       18   14.262    0.792   56.755    3.153 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
       18   13.714    0.762   24.944    1.386 random.py:286(sample)
  7205266   13.693    0.000   17.930    0.000 min_bisection.py:340(_get_cut_depth)
  4785616    6.897    0.000   10.053    0.000 random.py:224(_randbelow)
   132054    4.237    0.000    4.237    0.000 min_bisection.py:378(_get_vals)
  7517264    2.446    0.000    2.446    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    1.427    1.427   23.382   23.382 min_bisection.py:156(_instantiate_model)
  4541786    1.175    0.000    1.175    0.000 {method 'add' of 'set' objects}
    12721    1.109    0.000    1.109    0.000 min_bisection.py:219(<genexpr>)
        1    1.000    1.000    1.000    1.000 min_bisection.py:215(<dictcomp>)
  4785616    0.709    0.000    0.709    0.000 {method 'bit_length' of 'int' objects}
    16100    0.631    0.000    0.688    0.000 min_bisection.py:226(_add_triangle_inequality)
        1    0.440    0.440  760.705  760.705 min_bisection.py:428(solve_iteratively)
       18    0.440    0.024    0.440    0.024 {built-in method builtins.sorted}
        2    0.034    0.017    1.151    0.576 {gurobipy.gurobipy.quicksum}
       18    0.031    0.002    0.471    0.026 min_bisection.py:417(_find_most_violated_constraints)
    32240    0.023    0.000    0.023    0.000 {built-in method _abc._abc_instancecheck}
    16100    0.018    0.000    0.018    0.000 {method 'remove' of 'set' objects}


