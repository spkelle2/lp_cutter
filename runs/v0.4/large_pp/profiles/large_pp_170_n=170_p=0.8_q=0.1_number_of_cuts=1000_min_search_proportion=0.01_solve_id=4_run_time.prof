         10190734 function calls in 54.502 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1   20.662   20.662   20.662   20.662 min_bisection.py:65(<setcomp>)
       13    8.708    0.670   11.452    0.881 random.py:286(sample)
  4462082    8.029    0.000    9.389    0.000 min_bisection.py:340(_get_cut_depth)
       13    7.278    0.560   27.604    2.123 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
     8100    1.756    0.000    1.783    0.000 min_bisection.py:226(_add_triangle_inequality)
  1306087    1.693    0.000    2.393    0.000 random.py:224(_randbelow)
        1    1.536    1.536    1.536    1.536 min_bisection.py:215(<dictcomp>)
    78841    1.360    0.000    1.360    0.000 min_bisection.py:378(_get_vals)
    14366    1.216    0.000    1.216    0.000 min_bisection.py:219(<genexpr>)
        9    0.823    0.091    0.824    0.092 min_bisection.py:293(_optimize)
  1706753    0.508    0.000    0.508    0.000 {method 'getrandbits' of '_random.Random' objects}
  1252522    0.350    0.000    0.350    0.000 {method 'add' of 'set' objects}
        1    0.252    0.252   54.502   54.502 min_bisection.py:428(solve_iteratively)
  1306087    0.193    0.000    0.193    0.000 {method 'bit_length' of 'int' objects}
        1    0.044    0.044   23.504   23.504 min_bisection.py:156(_instantiate_model)
        2    0.037    0.018    1.261    0.631 {gurobipy.gurobipy.quicksum}
       13    0.014    0.001    0.014    0.001 {built-in method builtins.sorted}
    16230    0.011    0.000    0.011    0.000 {built-in method _abc._abc_instancecheck}
     8100    0.009    0.000    0.009    0.000 {method 'remove' of 'set' objects}
    16230    0.008    0.000    0.020    0.000 abc.py:137(__instancecheck__)


