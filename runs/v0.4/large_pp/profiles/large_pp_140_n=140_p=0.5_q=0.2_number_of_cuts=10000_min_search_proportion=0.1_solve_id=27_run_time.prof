         8541712 function calls in 6686.118 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        5 6654.111 1330.822 6654.112 1330.822 min_bisection.py:293(_optimize)
        1    8.614    8.614    8.614    8.614 min_bisection.py:65(<setcomp>)
  4395550    7.381    0.000    9.733    0.000 min_bisection.py:340(_get_cut_depth)
        7    4.969    0.710   19.215    2.745 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        6    2.711    0.452    4.735    0.789 random.py:286(sample)
    29648    2.352    0.000    2.352    0.000 min_bisection.py:378(_get_vals)
    40100    1.502    0.000    1.638    0.000 min_bisection.py:226(_add_triangle_inequality)
   932942    1.234    0.000    1.748    0.000 random.py:224(_randbelow)
        1    0.987    0.987   10.552   10.552 min_bisection.py:156(_instantiate_model)
     9731    0.844    0.000    0.844    0.000 min_bisection.py:219(<genexpr>)
  1104794    0.377    0.000    0.377    0.000 {method 'getrandbits' of '_random.Random' objects}
   885210    0.275    0.000    0.275    0.000 {method 'add' of 'set' objects}
        1    0.216    0.216 6686.118 6686.118 min_bisection.py:428(solve_iteratively)
   932942    0.137    0.000    0.137    0.000 {method 'bit_length' of 'int' objects}
        7    0.136    0.019    0.136    0.019 {built-in method builtins.sorted}
        1    0.077    0.077    0.077    0.077 min_bisection.py:215(<dictcomp>)
    80216    0.054    0.000    0.054    0.000 {built-in method _abc._abc_instancecheck}
    40100    0.044    0.000    0.044    0.000 {method 'remove' of 'set' objects}
    80216    0.038    0.000    0.092    0.000 abc.py:137(__instancecheck__)
        7    0.027    0.004    0.163    0.023 min_bisection.py:417(_find_most_violated_constraints)


