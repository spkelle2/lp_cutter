         7986224 function calls in 483.292 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       15  453.068   30.205  453.071   30.205 min_bisection.py:293(_optimize)
  4354891    7.318    0.000    8.782    0.000 min_bisection.py:340(_get_cut_depth)
       20    6.770    0.339   22.543    1.127 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
       19    5.434    0.286    7.215    0.380 random.py:286(sample)
        1    5.089    5.089    5.089    5.089 min_bisection.py:65(<setcomp>)
    88581    1.464    0.000    1.464    0.000 min_bisection.py:378(_get_vals)
   830650    1.102    0.000    1.562    0.000 random.py:224(_randbelow)
     9731    0.842    0.000    0.842    0.000 min_bisection.py:219(<genexpr>)
        1    0.703    0.703    0.703    0.703 min_bisection.py:215(<dictcomp>)
    13374    0.524    0.000    0.569    0.000 min_bisection.py:226(_add_triangle_inequality)
   979266    0.337    0.000    0.337    0.000 {method 'getrandbits' of '_random.Random' objects}
   800825    0.218    0.000    0.218    0.000 {method 'add' of 'set' objects}
        1    0.164    0.164  483.292  483.292 min_bisection.py:428(solve_iteratively)
   830650    0.123    0.000    0.123    0.000 {method 'bit_length' of 'int' objects}
        1    0.029    0.029    6.694    6.694 min_bisection.py:156(_instantiate_model)
        2    0.024    0.012    0.872    0.436 {gurobipy.gurobipy.quicksum}
       20    0.021    0.001    0.021    0.001 {built-in method builtins.sorted}
    26790    0.019    0.000    0.019    0.000 {built-in method _abc._abc_instancecheck}
    13374    0.014    0.000    0.014    0.000 {method 'remove' of 'set' objects}
    26790    0.013    0.000    0.032    0.000 abc.py:137(__instancecheck__)


