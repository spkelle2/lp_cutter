         15801238 function calls in 48.435 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1   15.290   15.290   15.290   15.290 min_bisection.py:65(<setcomp>)
  4396700    7.167    0.000   10.307    0.000 min_bisection.py:340(_get_cut_depth)
       11    6.062    0.551   11.755    1.069 random.py:286(sample)
       11    6.031    0.548   27.833    2.530 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
  2318693    3.493    0.000    5.108    0.000 random.py:224(_randbelow)
    68125    3.139    0.000    3.139    0.000 min_bisection.py:378(_get_vals)
       10    1.305    0.131    1.307    0.131 min_bisection.py:293(_optimize)
  4420302    1.272    0.000    1.272    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    1.214    1.214   18.355   18.355 min_bisection.py:156(_instantiate_model)
    11176    0.951    0.000    0.951    0.000 min_bisection.py:219(<genexpr>)
        1    0.865    0.865    0.865    0.865 min_bisection.py:215(<dictcomp>)
  2200700    0.583    0.000    0.583    0.000 {method 'add' of 'set' objects}
     9100    0.349    0.000    0.380    0.000 min_bisection.py:226(_add_triangle_inequality)
  2318693    0.343    0.000    0.343    0.000 {method 'bit_length' of 'int' objects}
        1    0.219    0.219   48.435   48.435 min_bisection.py:428(solve_iteratively)
       11    0.074    0.007    0.074    0.007 {built-in method builtins.sorted}
        2    0.028    0.014    0.985    0.493 {gurobipy.gurobipy.quicksum}
    18226    0.012    0.000    0.012    0.000 {built-in method _abc._abc_instancecheck}
     9100    0.010    0.000    0.010    0.000 {method 'remove' of 'set' objects}
    18226    0.009    0.000    0.021    0.000 abc.py:137(__instancecheck__)


