         7442271 function calls in 41.654 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1   19.453   19.453   19.453   19.453 min_bisection.py:65(<setcomp>)
  3460454    6.987    0.000    7.750    0.000 min_bisection.py:340(_get_cut_depth)
        4    4.023    1.006   16.054    4.014 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        4    2.720    0.680    4.665    1.166 random.py:286(sample)
        1    1.448    1.448   23.167   23.167 min_bisection.py:156(_instantiate_model)
   843390    1.183    0.000    1.739    0.000 random.py:224(_randbelow)
        1    1.127    1.127    1.127    1.127 min_bisection.py:215(<dictcomp>)
    12721    1.097    0.000    1.097    0.000 min_bisection.py:219(<genexpr>)
        3    0.988    0.329    0.989    0.330 min_bisection.py:293(_optimize)
    20100    0.767    0.000    0.836    0.000 min_bisection.py:226(_add_triangle_inequality)
    23361    0.764    0.000    0.764    0.000 min_bisection.py:378(_get_vals)
  1324308    0.432    0.000    0.432    0.000 {method 'getrandbits' of '_random.Random' objects}
   800974    0.206    0.000    0.206    0.000 {method 'add' of 'set' objects}
        1    0.205    0.205   41.654   41.654 min_bisection.py:428(solve_iteratively)
   843390    0.125    0.000    0.125    0.000 {method 'bit_length' of 'int' objects}
        2    0.034    0.017    1.138    0.569 {gurobipy.gurobipy.quicksum}
    40212    0.028    0.000    0.028    0.000 {built-in method _abc._abc_instancecheck}
    20100    0.021    0.000    0.021    0.000 {method 'remove' of 'set' objects}
    40212    0.019    0.000    0.048    0.000 abc.py:137(__instancecheck__)
        4    0.013    0.003    0.013    0.003 {built-in method builtins.sorted}


