         6842428 function calls in 24.850 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  4137912    7.094    0.000    7.394    0.000 min_bisection.py:340(_get_cut_depth)
        1    5.243    5.243    5.243    5.243 min_bisection.py:65(<setcomp>)
        8    4.873    0.609   15.828    1.978 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        7    2.469    0.353    3.789    0.541 random.py:286(sample)
        3    0.905    0.302    0.905    0.302 min_bisection.py:293(_optimize)
     9731    0.852    0.000    0.852    0.000 min_bisection.py:219(<genexpr>)
   616556    0.811    0.000    1.149    0.000 random.py:224(_randbelow)
    20100    0.746    0.000    0.814    0.000 min_bisection.py:226(_add_triangle_inequality)
        1    0.719    0.719    0.719    0.719 min_bisection.py:215(<dictcomp>)
    17745    0.301    0.000    0.301    0.000 min_bisection.py:378(_get_vals)
   725607    0.247    0.000    0.247    0.000 {method 'getrandbits' of '_random.Random' objects}
   587572    0.170    0.000    0.170    0.000 {method 'add' of 'set' objects}
        1    0.144    0.144   24.850   24.850 min_bisection.py:428(solve_iteratively)
   616556    0.091    0.000    0.091    0.000 {method 'bit_length' of 'int' objects}
        8    0.047    0.006    0.047    0.006 {built-in method builtins.sorted}
        1    0.030    0.030    6.873    6.873 min_bisection.py:156(_instantiate_model)
    40218    0.028    0.000    0.028    0.000 {built-in method _abc._abc_instancecheck}
        2    0.024    0.012    0.882    0.441 {gurobipy.gurobipy.quicksum}
    20100    0.022    0.000    0.022    0.000 {method 'remove' of 'set' objects}
    40218    0.019    0.000    0.047    0.000 abc.py:137(__instancecheck__)


