         11947499 function calls in 522.751 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        5  486.736   97.347  486.737   97.347 min_bisection.py:293(_optimize)
  5551473    9.573    0.000   10.129    0.000 min_bisection.py:340(_get_cut_depth)
        1    7.775    7.775    7.775    7.775 min_bisection.py:65(<setcomp>)
       12    7.501    0.625   24.716    2.060 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
       11    4.261    0.387    7.322    0.666 random.py:286(sample)
  1262294    1.857    0.000    2.725    0.000 random.py:224(_randbelow)
    31570    1.151    0.000    1.257    0.000 min_bisection.py:226(_add_triangle_inequality)
    11176    0.955    0.000    0.955    0.000 min_bisection.py:219(<genexpr>)
        1    0.741    0.741    0.741    0.741 min_bisection.py:215(<dictcomp>)
  2422071    0.682    0.000    0.682    0.000 {method 'getrandbits' of '_random.Random' objects}
    34087    0.556    0.000    0.556    0.000 min_bisection.py:378(_get_vals)
  1202843    0.336    0.000    0.336    0.000 {method 'add' of 'set' objects}
        1    0.188    0.188  522.751  522.751 min_bisection.py:428(solve_iteratively)
  1262294    0.186    0.000    0.186    0.000 {method 'bit_length' of 'int' objects}
       12    0.064    0.005    0.064    0.005 {built-in method builtins.sorted}
    63166    0.042    0.000    0.042    0.000 {built-in method _abc._abc_instancecheck}
        1    0.034    0.034    9.539    9.539 min_bisection.py:156(_instantiate_model)
    31570    0.033    0.000    0.033    0.000 {method 'remove' of 'set' objects}
    63166    0.030    0.000    0.072    0.000 abc.py:137(__instancecheck__)
        2    0.028    0.014    0.989    0.495 {gurobipy.gurobipy.quicksum}


