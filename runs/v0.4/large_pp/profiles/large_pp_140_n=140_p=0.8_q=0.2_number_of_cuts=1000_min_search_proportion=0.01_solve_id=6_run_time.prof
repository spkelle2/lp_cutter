         8437913 function calls in 30.564 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  4455098    7.350    0.000    8.321    0.000 min_bisection.py:340(_get_cut_depth)
       16    5.902    0.369   20.866    1.304 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        1    5.638    5.638    5.638    5.638 min_bisection.py:65(<setcomp>)
       15    4.836    0.322    6.873    0.458 random.py:286(sample)
       10    1.667    0.167    1.669    0.167 min_bisection.py:293(_optimize)
   930891    1.249    0.000    1.763    0.000 random.py:224(_randbelow)
    59121    0.971    0.000    0.971    0.000 min_bisection.py:378(_get_vals)
     9731    0.850    0.000    0.850    0.000 min_bisection.py:219(<genexpr>)
        1    0.715    0.715    0.715    0.715 min_bisection.py:215(<dictcomp>)
  1094933    0.377    0.000    0.377    0.000 {method 'getrandbits' of '_random.Random' objects}
     9100    0.349    0.000    0.380    0.000 min_bisection.py:226(_add_triangle_inequality)
   891758    0.272    0.000    0.272    0.000 {method 'add' of 'set' objects}
        1    0.141    0.141   30.564   30.564 min_bisection.py:428(solve_iteratively)
   930891    0.138    0.000    0.138    0.000 {method 'bit_length' of 'int' objects}
        1    0.029    0.029    7.261    7.261 min_bisection.py:156(_instantiate_model)
        2    0.024    0.012    0.880    0.440 {gurobipy.gurobipy.quicksum}
    18234    0.013    0.000    0.013    0.000 {built-in method _abc._abc_instancecheck}
       16    0.012    0.001    0.012    0.001 {built-in method builtins.sorted}
     9100    0.010    0.000    0.010    0.000 {method 'remove' of 'set' objects}
    18234    0.009    0.000    0.022    0.000 abc.py:137(__instancecheck__)


