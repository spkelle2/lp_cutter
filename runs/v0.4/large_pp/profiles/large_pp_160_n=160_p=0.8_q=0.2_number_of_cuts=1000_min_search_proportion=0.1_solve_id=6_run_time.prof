         19787553 function calls in 76.486 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1   23.072   23.072   23.072   23.072 min_bisection.py:65(<setcomp>)
       11   10.385    0.944   10.388    0.944 min_bisection.py:293(_optimize)
  5611618    9.670    0.000   14.290    0.000 min_bisection.py:340(_get_cut_depth)
       12    8.978    0.748   16.305    1.359 random.py:286(sample)
       12    8.887    0.741   39.103    3.259 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
    85259    4.619    0.000    4.619    0.000 min_bisection.py:378(_get_vals)
  3100091    4.502    0.000    6.547    0.000 random.py:224(_randbelow)
  4861138    1.584    0.000    1.584    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    1.438    1.438   25.769   25.769 min_bisection.py:156(_instantiate_model)
    12721    1.114    0.000    1.114    0.000 min_bisection.py:219(<genexpr>)
  2942138    0.779    0.000    0.779    0.000 {method 'add' of 'set' objects}
  3100091    0.461    0.000    0.461    0.000 {method 'bit_length' of 'int' objects}
    10100    0.395    0.000    0.430    0.000 min_bisection.py:226(_add_triangle_inequality)
        1    0.286    0.286   76.486   76.486 min_bisection.py:428(solve_iteratively)
       12    0.122    0.010    0.122    0.010 {built-in method builtins.sorted}
        1    0.103    0.103    0.103    0.103 min_bisection.py:215(<dictcomp>)
        2    0.034    0.017    1.156    0.578 {gurobipy.gurobipy.quicksum}
    20228    0.014    0.000    0.014    0.000 {built-in method _abc._abc_instancecheck}
    10100    0.011    0.000    0.011    0.000 {method 'remove' of 'set' objects}
    20228    0.010    0.000    0.025    0.000 abc.py:137(__instancecheck__)


