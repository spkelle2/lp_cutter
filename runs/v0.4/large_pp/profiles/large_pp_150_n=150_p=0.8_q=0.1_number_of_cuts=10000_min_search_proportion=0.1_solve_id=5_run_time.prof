         8574863 function calls in 35.960 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1   12.320   12.320   12.320   12.320 min_bisection.py:65(<setcomp>)
  5038730    8.606    0.000    9.971    0.000 min_bisection.py:340(_get_cut_depth)
        5    5.332    1.066   18.645    3.729 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        4    1.929    0.482    3.594    0.898 random.py:286(sample)
    20462    1.365    0.000    1.365    0.000 min_bisection.py:378(_get_vals)
        1    1.104    1.104   15.184   15.184 min_bisection.py:156(_instantiate_model)
   693661    1.008    0.000    1.489    0.000 random.py:224(_randbelow)
    11176    0.946    0.000    0.946    0.000 min_bisection.py:219(<genexpr>)
        3    0.824    0.275    0.824    0.275 min_bisection.py:293(_optimize)
        1    0.778    0.778    0.778    0.778 min_bisection.py:215(<dictcomp>)
    20100    0.738    0.000    0.804    0.000 min_bisection.py:226(_add_triangle_inequality)
  1326409    0.380    0.000    0.380    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    0.183    0.183   35.960   35.960 min_bisection.py:428(solve_iteratively)
   658630    0.175    0.000    0.175    0.000 {method 'add' of 'set' objects}
   693661    0.101    0.000    0.101    0.000 {method 'bit_length' of 'int' objects}
        5    0.060    0.012    0.060    0.012 {built-in method builtins.sorted}
        2    0.028    0.014    0.981    0.490 {gurobipy.gurobipy.quicksum}
    40212    0.026    0.000    0.026    0.000 {built-in method _abc._abc_instancecheck}
    20100    0.021    0.000    0.021    0.000 {method 'remove' of 'set' objects}
    40212    0.019    0.000    0.045    0.000 abc.py:137(__instancecheck__)


