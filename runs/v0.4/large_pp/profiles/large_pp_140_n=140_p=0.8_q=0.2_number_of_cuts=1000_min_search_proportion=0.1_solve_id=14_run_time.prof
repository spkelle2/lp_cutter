         10495870 function calls in 34.460 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    9.916    9.916    9.916    9.916 min_bisection.py:65(<setcomp>)
  3389818    5.461    0.000    7.824    0.000 min_bisection.py:340(_get_cut_depth)
       10    5.141    0.514   21.033    2.103 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
       10    4.642    0.464    8.289    0.829 random.py:286(sample)
    53226    2.363    0.000    2.363    0.000 min_bisection.py:378(_get_vals)
  1694097    2.237    0.000    3.171    0.000 random.py:224(_randbelow)
        1    0.911    0.911   11.780   11.780 min_bisection.py:156(_instantiate_model)
        9    0.878    0.098    0.880    0.098 min_bisection.py:293(_optimize)
     9731    0.845    0.000    0.845    0.000 min_bisection.py:219(<genexpr>)
  1987902    0.683    0.000    0.683    0.000 {method 'getrandbits' of '_random.Random' objects}
  1607698    0.476    0.000    0.476    0.000 {method 'add' of 'set' objects}
     8100    0.311    0.000    0.338    0.000 min_bisection.py:226(_add_triangle_inequality)
  1694097    0.252    0.000    0.252    0.000 {method 'bit_length' of 'int' objects}
        1    0.160    0.160   34.460   34.460 min_bisection.py:428(solve_iteratively)
        1    0.077    0.077    0.077    0.077 min_bisection.py:215(<dictcomp>)
       10    0.044    0.004    0.044    0.004 {built-in method builtins.sorted}
        2    0.025    0.012    0.875    0.438 {gurobipy.gurobipy.quicksum}
    16224    0.011    0.000    0.011    0.000 {built-in method _abc._abc_instancecheck}
     8100    0.008    0.000    0.008    0.000 {method 'remove' of 'set' objects}
    16224    0.008    0.000    0.019    0.000 abc.py:137(__instancecheck__)


