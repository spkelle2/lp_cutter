         6842631 function calls in 24.537 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  4137912    6.457    0.000    6.758    0.000 min_bisection.py:340(_get_cut_depth)
        8    5.534    0.692   15.825    1.978 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        1    5.054    5.054    5.054    5.054 min_bisection.py:65(<setcomp>)
        7    2.445    0.349    3.758    0.537 random.py:286(sample)
     9731    0.850    0.000    0.850    0.000 min_bisection.py:219(<genexpr>)
   616407    0.811    0.000    1.148    0.000 random.py:224(_randbelow)
        3    0.783    0.261    0.784    0.261 min_bisection.py:293(_optimize)
    20100    0.755    0.000    0.823    0.000 min_bisection.py:226(_add_triangle_inequality)
        1    0.715    0.715    0.715    0.715 min_bisection.py:215(<dictcomp>)
    17774    0.300    0.000    0.300    0.000 min_bisection.py:378(_get_vals)
   726079    0.247    0.000    0.247    0.000 {method 'getrandbits' of '_random.Random' objects}
   587572    0.165    0.000    0.165    0.000 {method 'add' of 'set' objects}
        1    0.144    0.144   24.537   24.537 min_bisection.py:428(solve_iteratively)
   616407    0.091    0.000    0.091    0.000 {method 'bit_length' of 'int' objects}
        8    0.048    0.006    0.048    0.006 {built-in method builtins.sorted}
        1    0.029    0.029    6.678    6.678 min_bisection.py:156(_instantiate_model)
    40218    0.028    0.000    0.028    0.000 {built-in method _abc._abc_instancecheck}
        2    0.024    0.012    0.879    0.440 {gurobipy.gurobipy.quicksum}
    20100    0.022    0.000    0.022    0.000 {method 'remove' of 'set' objects}
    40218    0.019    0.000    0.046    0.000 abc.py:137(__instancecheck__)


