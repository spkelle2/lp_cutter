         3235648 function calls in 11.700 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    3.114    3.114    3.114    3.114 min_bisection.py:65(<setcomp>)
  1289770    2.040    0.000    2.515    0.000 min_bisection.py:340(_get_cut_depth)
        6    1.600    0.267    6.430    1.072 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        6    1.409    0.235    2.439    0.406 random.py:286(sample)
   453616    0.660    0.000    0.910    0.000 random.py:224(_randbelow)
        1    0.546    0.546    4.649    4.649 min_bisection.py:156(_instantiate_model)
     5996    0.525    0.000    0.525    0.000 min_bisection.py:219(<genexpr>)
    18296    0.474    0.000    0.474    0.000 min_bisection.py:378(_get_vals)
        1    0.445    0.445    0.445    0.445 min_bisection.py:215(<dictcomp>)
        5    0.247    0.049    0.248    0.050 min_bisection.py:293(_optimize)
   552510    0.183    0.000    0.183    0.000 {method 'getrandbits' of '_random.Random' objects}
     4100    0.160    0.000    0.174    0.000 min_bisection.py:226(_add_triangle_inequality)
   430690    0.119    0.000    0.119    0.000 {method 'add' of 'set' objects}
   453616    0.067    0.000    0.067    0.000 {method 'bit_length' of 'int' objects}
        1    0.063    0.063   11.700   11.700 min_bisection.py:428(solve_iteratively)
        2    0.016    0.008    0.545    0.272 {gurobipy.gurobipy.quicksum}
        6    0.010    0.002    0.010    0.002 {built-in method builtins.sorted}
     8216    0.006    0.000    0.006    0.000 {built-in method _abc._abc_instancecheck}
     8216    0.004    0.000    0.010    0.000 abc.py:137(__instancecheck__)
     4100    0.004    0.000    0.004    0.000 {method 'remove' of 'set' objects}


