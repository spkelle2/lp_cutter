         6844010 function calls in 24.430 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  4137912    6.442    0.000    6.744    0.000 min_bisection.py:340(_get_cut_depth)
        8    5.392    0.674   15.749    1.969 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        1    5.348    5.348    5.348    5.348 min_bisection.py:65(<setcomp>)
        7    2.495    0.356    3.839    0.548 random.py:286(sample)
     9731    0.855    0.000    0.855    0.000 min_bisection.py:219(<genexpr>)
   616633    0.817    0.000    1.158    0.000 random.py:224(_randbelow)
    20100    0.751    0.000    0.818    0.000 min_bisection.py:226(_add_triangle_inequality)
        1    0.689    0.689    0.689    0.689 min_bisection.py:215(<dictcomp>)
        3    0.525    0.175    0.526    0.175 min_bisection.py:293(_optimize)
    17873    0.302    0.000    0.302    0.000 min_bisection.py:378(_get_vals)
   726907    0.249    0.000    0.249    0.000 {method 'getrandbits' of '_random.Random' objects}
   587572    0.186    0.000    0.186    0.000 {method 'add' of 'set' objects}
        1    0.133    0.133   24.430   24.430 min_bisection.py:428(solve_iteratively)
   616633    0.092    0.000    0.092    0.000 {method 'bit_length' of 'int' objects}
        1    0.029    0.029    6.952    6.952 min_bisection.py:156(_instantiate_model)
    40218    0.028    0.000    0.028    0.000 {built-in method _abc._abc_instancecheck}
        2    0.025    0.012    0.886    0.443 {gurobipy.gurobipy.quicksum}
    20100    0.021    0.000    0.021    0.000 {method 'remove' of 'set' objects}
    40218    0.019    0.000    0.047    0.000 abc.py:137(__instancecheck__)
        8    0.017    0.002    0.017    0.002 {built-in method builtins.sorted}


