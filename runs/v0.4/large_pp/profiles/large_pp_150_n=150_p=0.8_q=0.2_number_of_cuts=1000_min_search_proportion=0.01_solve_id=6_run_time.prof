         9875180 function calls in 37.224 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  5272390    8.624    0.000   10.440    0.000 min_bisection.py:340(_get_cut_depth)
        1    8.449    8.449    8.449    8.449 min_bisection.py:65(<setcomp>)
       15    6.837    0.456   23.938    1.596 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
       14    4.722    0.337    6.910    0.494 random.py:286(sample)
       10    2.225    0.222    2.227    0.223 min_bisection.py:293(_optimize)
    67924    1.816    0.000    1.816    0.000 min_bisection.py:378(_get_vals)
   916019    1.323    0.000    1.955    0.000 random.py:224(_randbelow)
    11176    0.949    0.000    0.949    0.000 min_bisection.py:219(<genexpr>)
        1    0.789    0.789    0.789    0.789 min_bisection.py:215(<dictcomp>)
  1745447    0.498    0.000    0.498    0.000 {method 'getrandbits' of '_random.Random' objects}
     9100    0.342    0.000    0.372    0.000 min_bisection.py:226(_add_triangle_inequality)
   879290    0.233    0.000    0.233    0.000 {method 'add' of 'set' objects}
        1    0.166    0.166   37.224   37.224 min_bisection.py:428(solve_iteratively)
   916019    0.134    0.000    0.134    0.000 {method 'bit_length' of 'int' objects}
        1    0.034    0.034   10.254   10.254 min_bisection.py:156(_instantiate_model)
        2    0.027    0.014    0.982    0.491 {gurobipy.gurobipy.quicksum}
       15    0.013    0.001    0.013    0.001 {built-in method builtins.sorted}
    18232    0.012    0.000    0.013    0.000 {built-in method _abc._abc_instancecheck}
     9100    0.009    0.000    0.009    0.000 {method 'remove' of 'set' objects}
    18232    0.009    0.000    0.021    0.000 abc.py:137(__instancecheck__)


