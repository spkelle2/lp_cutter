         8567147 function calls in 29.611 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    9.990    9.990    9.990    9.990 min_bisection.py:65(<setcomp>)
  3035274    4.781    0.000    6.014    0.000 min_bisection.py:340(_get_cut_depth)
        8    4.472    0.559   16.693    2.087 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        8    3.601    0.450    6.421    0.803 random.py:286(sample)
  1318282    1.731    0.000    2.457    0.000 random.py:224(_randbelow)
    41562    1.233    0.000    1.233    0.000 min_bisection.py:378(_get_vals)
        1    0.897    0.897   11.831   11.831 min_bisection.py:156(_instantiate_model)
     9731    0.838    0.000    0.838    0.000 min_bisection.py:219(<genexpr>)
  1545767    0.532    0.000    0.532    0.000 {method 'getrandbits' of '_random.Random' objects}
        7    0.446    0.064    0.447    0.064 min_bisection.py:293(_optimize)
  1251154    0.362    0.000    0.362    0.000 {method 'add' of 'set' objects}
     6100    0.235    0.000    0.256    0.000 min_bisection.py:226(_add_triangle_inequality)
  1318282    0.194    0.000    0.194    0.000 {method 'bit_length' of 'int' objects}
        1    0.139    0.139   29.611   29.611 min_bisection.py:428(solve_iteratively)
        1    0.076    0.076    0.076    0.076 min_bisection.py:215(<dictcomp>)
        8    0.027    0.003    0.027    0.003 {built-in method builtins.sorted}
        2    0.024    0.012    0.868    0.434 {gurobipy.gurobipy.quicksum}
    12220    0.008    0.000    0.009    0.000 {built-in method _abc._abc_instancecheck}
     6100    0.006    0.000    0.006    0.000 {method 'remove' of 'set' objects}
    12220    0.006    0.000    0.015    0.000 abc.py:137(__instancecheck__)


