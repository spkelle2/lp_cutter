         10495924 function calls in 35.015 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    9.948    9.948    9.948    9.948 min_bisection.py:65(<setcomp>)
  3389818    6.181    0.000    8.455    0.000 min_bisection.py:340(_get_cut_depth)
       10    4.715    0.471    8.394    0.839 random.py:286(sample)
       10    4.475    0.447   21.103    2.110 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
    53373    2.274    0.000    2.274    0.000 min_bisection.py:378(_get_vals)
  1693806    2.229    0.000    3.167    0.000 random.py:224(_randbelow)
        9    1.302    0.145    1.304    0.145 min_bisection.py:293(_optimize)
        1    0.933    0.933   11.828   11.828 min_bisection.py:156(_instantiate_model)
     9731    0.840    0.000    0.840    0.000 min_bisection.py:219(<genexpr>)
  1988391    0.689    0.000    0.689    0.000 {method 'getrandbits' of '_random.Random' objects}
  1607698    0.512    0.000    0.512    0.000 {method 'add' of 'set' objects}
     8100    0.313    0.000    0.340    0.000 min_bisection.py:226(_add_triangle_inequality)
  1693806    0.249    0.000    0.249    0.000 {method 'bit_length' of 'int' objects}
        1    0.165    0.165   35.015   35.015 min_bisection.py:428(solve_iteratively)
        1    0.077    0.077    0.077    0.077 min_bisection.py:215(<dictcomp>)
       10    0.050    0.005    0.050    0.005 {built-in method builtins.sorted}
        2    0.024    0.012    0.870    0.435 {gurobipy.gurobipy.quicksum}
    16224    0.011    0.000    0.011    0.000 {built-in method _abc._abc_instancecheck}
     8100    0.008    0.000    0.008    0.000 {method 'remove' of 'set' objects}
    16224    0.008    0.000    0.019    0.000 abc.py:137(__instancecheck__)


