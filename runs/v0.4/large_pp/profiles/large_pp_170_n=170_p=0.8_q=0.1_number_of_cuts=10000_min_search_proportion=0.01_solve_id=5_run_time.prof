         14297062 function calls in 61.439 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1   21.392   21.392   21.392   21.392 min_bisection.py:65(<setcomp>)
  7805217   13.277    0.000   15.320    0.000 min_bisection.py:340(_get_cut_depth)
       10    9.994    0.999   34.650    3.465 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        9    6.701    0.745    9.842    1.094 random.py:286(sample)
    20434    2.192    0.000    2.262    0.000 min_bisection.py:226(_add_triangle_inequality)
    35157    2.043    0.000    2.043    0.000 min_bisection.py:378(_get_vals)
  1479323    1.932    0.000    2.729    0.000 random.py:224(_randbelow)
    14366    1.231    0.000    1.231    0.000 min_bisection.py:219(<genexpr>)
        4    0.917    0.229    0.918    0.229 min_bisection.py:293(_optimize)
  1935833    0.577    0.000    0.577    0.000 {method 'getrandbits' of '_random.Random' objects}
  1410331    0.411    0.000    0.411    0.000 {method 'add' of 'set' objects}
        1    0.250    0.250   61.439   61.439 min_bisection.py:428(solve_iteratively)
  1479323    0.220    0.000    0.220    0.000 {method 'bit_length' of 'int' objects}
        1    0.113    0.113    0.113    0.113 min_bisection.py:215(<dictcomp>)
        1    0.045    0.045   22.826   22.826 min_bisection.py:156(_instantiate_model)
        2    0.037    0.018    1.276    0.638 {gurobipy.gurobipy.quicksum}
    40890    0.028    0.000    0.028    0.000 {built-in method _abc._abc_instancecheck}
    20434    0.022    0.000    0.022    0.000 {method 'remove' of 'set' objects}
    40890    0.020    0.000    0.048    0.000 abc.py:137(__instancecheck__)
       10    0.019    0.002    0.019    0.002 {built-in method builtins.sorted}


