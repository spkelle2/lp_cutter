         31674954 function calls in 870.230 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        6  756.040  126.007  756.041  126.007 min_bisection.py:293(_optimize)
        1   32.285   32.285   32.285   32.285 min_bisection.py:65(<setcomp>)
 16341912   27.669    0.000   30.611    0.000 min_bisection.py:340(_get_cut_depth)
       15   25.007    1.667   75.242    5.016 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
       13   12.591    0.969   20.241    1.557 random.py:286(sample)
  3100114    4.590    0.000    6.816    0.000 random.py:224(_randbelow)
    65786    2.942    0.000    2.942    0.000 min_bisection.py:378(_get_vals)
        1    1.922    1.922    1.922    1.922 min_bisection.py:215(<dictcomp>)
  5808322    1.757    0.000    1.757    0.000 {method 'getrandbits' of '_random.Random' objects}
    44564    1.663    0.000    1.813    0.000 min_bisection.py:226(_add_triangle_inequality)
    17956    1.571    0.000    1.571    0.000 min_bisection.py:219(<genexpr>)
  2954616    0.833    0.000    0.833    0.000 {method 'add' of 'set' objects}
  3100114    0.468    0.000    0.468    0.000 {method 'bit_length' of 'int' objects}
        1    0.436    0.436  870.230  870.230 min_bisection.py:428(solve_iteratively)
       15    0.160    0.011    0.160    0.011 {built-in method builtins.sorted}
    89158    0.058    0.000    0.058    0.000 {built-in method _abc._abc_instancecheck}
        1    0.054    0.054   35.889   35.889 min_bisection.py:156(_instantiate_model)
    44564    0.049    0.000    0.049    0.000 {method 'remove' of 'set' objects}
        2    0.047    0.023    1.628    0.814 {gurobipy.gurobipy.quicksum}
    89158    0.043    0.000    0.102    0.000 abc.py:137(__instancecheck__)


