         10271411 function calls in 57.142 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        5   24.134    4.827   24.135    4.827 min_bisection.py:293(_optimize)
  6175274    9.587    0.000   11.124    0.000 min_bisection.py:340(_get_cut_depth)
        1    6.975    6.975    6.975    6.975 min_bisection.py:65(<setcomp>)
        8    6.383    0.798   21.950    2.744 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
        6    2.635    0.439    4.663    0.777 random.py:286(sample)
    29603    1.537    0.000    1.537    0.000 min_bisection.py:378(_get_vals)
   933422    1.228    0.000    1.742    0.000 random.py:224(_randbelow)
    31460    1.170    0.000    1.275    0.000 min_bisection.py:226(_add_triangle_inequality)
        1    0.844    0.844    9.347    9.347 min_bisection.py:156(_instantiate_model)
     9731    0.841    0.000    0.841    0.000 min_bisection.py:219(<genexpr>)
        1    0.658    0.658    0.658    0.658 min_bisection.py:215(<dictcomp>)
  1104823    0.376    0.000    0.376    0.000 {method 'getrandbits' of '_random.Random' objects}
   886074    0.286    0.000    0.286    0.000 {method 'add' of 'set' objects}
        1    0.165    0.165   57.142   57.142 min_bisection.py:428(solve_iteratively)
   933422    0.138    0.000    0.138    0.000 {method 'bit_length' of 'int' objects}
    62936    0.043    0.000    0.043    0.000 {built-in method _abc._abc_instancecheck}
        8    0.038    0.005    0.038    0.005 {built-in method builtins.sorted}
    31460    0.033    0.000    0.033    0.000 {method 'remove' of 'set' objects}
    62936    0.030    0.000    0.072    0.000 abc.py:137(__instancecheck__)
        2    0.024    0.012    0.871    0.436 {gurobipy.gurobipy.quicksum}


