         4453141 function calls in 1083.340 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       86 1055.527   12.274 1055.546   12.274 min_bisection.py:293(_optimize)
       88   11.155    0.127   12.661    0.144 random.py:286(sample)
       88    4.738    0.054   24.203    0.275 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
   251159    4.241    0.000    4.241    0.000 min_bisection.py:378(_get_vals)
  1254527    2.678    0.000    6.919    0.000 min_bisection.py:340(_get_cut_depth)
        1    1.413    1.413    1.413    1.413 min_bisection.py:65(<setcomp>)
   622660    0.912    0.000    1.337    0.000 random.py:224(_randbelow)
        1    0.854    0.854    2.751    2.751 min_bisection.py:156(_instantiate_model)
     4951    0.429    0.000    0.429    0.000 min_bisection.py:219(<genexpr>)
     8600    0.361    0.000    0.392    0.000 min_bisection.py:226(_add_triangle_inequality)
  1015285    0.332    0.000    0.332    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    0.271    0.271 1083.340 1083.340 min_bisection.py:428(solve_iteratively)
   616427    0.162    0.000    0.162    0.000 {method 'add' of 'set' objects}
   622660    0.092    0.000    0.092    0.000 {method 'bit_length' of 'int' objects}
       88    0.054    0.001    0.054    0.001 {built-in method builtins.sorted}
        1    0.040    0.040    0.040    0.040 min_bisection.py:215(<dictcomp>)
    17380    0.014    0.000    0.016    0.000 {built-in method _abc._abc_instancecheck}
        2    0.012    0.006    0.444    0.222 {gurobipy.gurobipy.quicksum}
     8600    0.010    0.000    0.010    0.000 {method 'remove' of 'set' objects}
    17380    0.009    0.000    0.025    0.000 abc.py:137(__instancecheck__)


