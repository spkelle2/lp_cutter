         7381060 function calls in 35.828 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       35   20.982    0.599   20.989    0.600 min_bisection.py:293(_optimize)
       36    3.567    0.099    6.423    0.178 random.py:286(sample)
  1794320    3.039    0.000    4.332    0.000 min_bisection.py:340(_get_cut_depth)
       37    2.777    0.075   13.480    0.364 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
  1205405    1.787    0.000    2.563    0.000 random.py:224(_randbelow)
    67297    1.293    0.000    1.293    0.000 min_bisection.py:378(_get_vals)
  1933617    0.597    0.000    0.597    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    0.487    0.487    0.487    0.487 min_bisection.py:65(<setcomp>)
  1144040    0.290    0.000    0.290    0.000 {method 'add' of 'set' objects}
     3161    0.266    0.000    0.266    0.000 min_bisection.py:219(<genexpr>)
  1205405    0.179    0.000    0.179    0.000 {method 'bit_length' of 'int' objects}
     3500    0.147    0.000    0.160    0.000 min_bisection.py:226(_add_triangle_inequality)
        1    0.143    0.143    0.939    0.939 min_bisection.py:156(_instantiate_model)
        1    0.104    0.104   35.828   35.828 min_bisection.py:428(solve_iteratively)
       37    0.100    0.003    0.100    0.003 {built-in method builtins.sorted}
        1    0.032    0.032    0.032    0.032 min_bisection.py:215(<dictcomp>)
        2    0.009    0.004    0.277    0.138 {gurobipy.gurobipy.quicksum}
     7076    0.006    0.000    0.006    0.000 {built-in method _abc._abc_instancecheck}
       37    0.005    0.000    0.105    0.003 min_bisection.py:417(_find_most_violated_constraints)
     3500    0.004    0.000    0.004    0.000 {method 'remove' of 'set' objects}


