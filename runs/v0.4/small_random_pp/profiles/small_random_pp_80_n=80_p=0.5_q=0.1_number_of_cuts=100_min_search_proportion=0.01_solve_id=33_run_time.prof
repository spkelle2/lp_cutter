         1440838 function calls in 26.393 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       35   20.128    0.575   20.134    0.575 min_bisection.py:293(_optimize)
       38    1.785    0.047    2.224    0.059 random.py:286(sample)
       38    1.033    0.027    5.043    0.133 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
    62939    0.937    0.000    0.937    0.000 min_bisection.py:378(_get_vals)
   504558    0.891    0.000    1.827    0.000 min_bisection.py:340(_get_cut_depth)
        1    0.395    0.395    0.973    0.973 min_bisection.py:156(_instantiate_model)
        1    0.278    0.278    0.278    0.278 min_bisection.py:65(<setcomp>)
   183610    0.276    0.000    0.395    0.000 random.py:224(_randbelow)
     3161    0.263    0.000    0.263    0.000 min_bisection.py:219(<genexpr>)
     3500    0.138    0.000    0.150    0.000 min_bisection.py:226(_add_triangle_inequality)
   295593    0.092    0.000    0.092    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    0.043    0.043   26.393   26.393 min_bisection.py:428(solve_iteratively)
   179518    0.041    0.000    0.041    0.000 {method 'add' of 'set' objects}
   183610    0.027    0.000    0.027    0.000 {method 'bit_length' of 'int' objects}
        1    0.025    0.025    0.025    0.025 min_bisection.py:215(<dictcomp>)
        2    0.009    0.004    0.274    0.137 {gurobipy.gurobipy.quicksum}
       38    0.008    0.000    0.008    0.000 {built-in method builtins.sorted}
     7080    0.006    0.000    0.006    0.000 {built-in method _abc._abc_instancecheck}
     7080    0.004    0.000    0.010    0.000 abc.py:137(__instancecheck__)
     3500    0.004    0.000    0.004    0.000 {method 'remove' of 'set' objects}


