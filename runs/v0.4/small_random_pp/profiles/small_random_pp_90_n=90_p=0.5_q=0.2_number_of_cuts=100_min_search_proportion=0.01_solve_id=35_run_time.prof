         3447899 function calls in 523.576 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       75  506.954    6.759  506.967    6.760 min_bisection.py:293(_optimize)
       78    4.997    0.064    5.991    0.077 random.py:286(sample)
       79    3.190    0.040   14.424    0.183 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
   174414    2.746    0.000    2.746    0.000 min_bisection.py:378(_get_vals)
  1367009    2.553    0.000    5.299    0.000 min_bisection.py:340(_get_cut_depth)
        1    0.684    0.684    0.684    0.684 min_bisection.py:65(<setcomp>)
   448877    0.632    0.000    0.885    0.000 random.py:224(_randbelow)
        1    0.564    0.564    1.636    1.636 min_bisection.py:156(_instantiate_model)
     4006    0.342    0.000    0.342    0.000 min_bisection.py:219(<genexpr>)
     7500    0.300    0.000    0.327    0.000 min_bisection.py:226(_add_triangle_inequality)
   505727    0.176    0.000    0.176    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    0.135    0.135  523.576  523.576 min_bisection.py:428(solve_iteratively)
   442169    0.105    0.000    0.105    0.000 {method 'add' of 'set' objects}
   448877    0.076    0.000    0.076    0.000 {method 'bit_length' of 'int' objects}
        1    0.032    0.032    0.032    0.032 min_bisection.py:215(<dictcomp>)
       79    0.026    0.000    0.026    0.000 {built-in method builtins.sorted}
    15160    0.013    0.000    0.014    0.000 {built-in method _abc._abc_instancecheck}
        2    0.011    0.006    0.355    0.178 {gurobipy.gurobipy.quicksum}
     7500    0.008    0.000    0.008    0.000 {method 'remove' of 'set' objects}
    15160    0.008    0.000    0.022    0.000 abc.py:137(__instancecheck__)


