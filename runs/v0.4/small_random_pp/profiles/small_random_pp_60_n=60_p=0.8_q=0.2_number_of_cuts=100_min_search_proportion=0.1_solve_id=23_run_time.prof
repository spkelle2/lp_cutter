         1248452 function calls in 2.700 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
   312614    0.501    0.000    0.706    0.000 min_bisection.py:340(_get_cut_depth)
       14    0.439    0.031    0.917    0.065 random.py:286(sample)
       14    0.389    0.028    1.997    0.143 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
   186682    0.289    0.000    0.437    0.000 random.py:224(_randbelow)
        1    0.229    0.229    0.229    0.229 min_bisection.py:65(<setcomp>)
    13943    0.206    0.000    0.206    0.000 min_bisection.py:378(_get_vals)
     1771    0.155    0.000    0.155    0.000 min_bisection.py:219(<genexpr>)
       13    0.137    0.011    0.140    0.011 min_bisection.py:293(_optimize)
   358673    0.120    0.000    0.120    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    0.069    0.069    0.473    0.473 min_bisection.py:156(_instantiate_model)
     1300    0.052    0.000    0.057    0.000 min_bisection.py:226(_add_triangle_inequality)
   177134    0.040    0.000    0.040    0.000 {method 'add' of 'set' objects}
   186682    0.028    0.000    0.028    0.000 {method 'bit_length' of 'int' objects}
        1    0.014    0.014    0.014    0.014 min_bisection.py:215(<dictcomp>)
        1    0.013    0.013    2.700    2.700 min_bisection.py:428(solve_iteratively)
       14    0.005    0.000    0.005    0.000 {built-in method builtins.sorted}
        2    0.005    0.002    0.161    0.081 {gurobipy.gurobipy.quicksum}
     2632    0.002    0.000    0.002    0.000 {built-in method _abc._abc_instancecheck}
     2632    0.001    0.000    0.004    0.000 abc.py:137(__instancecheck__)
     1300    0.001    0.000    0.001    0.000 {method 'remove' of 'set' objects}


