         4042531 function calls in 82.981 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       50   62.410    1.248   62.421    1.248 min_bisection.py:293(_optimize)
       53    6.920    0.131    8.002    0.151 random.py:286(sample)
       54    3.956    0.073   18.078    0.335 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
  1734195    3.358    0.000    6.237    0.000 min_bisection.py:340(_get_cut_depth)
   146190    2.880    0.000    2.880    0.000 min_bisection.py:378(_get_vals)
        1    0.842    0.842    1.961    1.961 min_bisection.py:156(_instantiate_model)
   459028    0.660    0.000    0.960    0.000 random.py:224(_randbelow)
        1    0.636    0.636    0.636    0.636 min_bisection.py:65(<setcomp>)
     4951    0.427    0.000    0.427    0.000 min_bisection.py:219(<genexpr>)
   748354    0.233    0.000    0.233    0.000 {method 'getrandbits' of '_random.Random' objects}
     5000    0.211    0.000    0.230    0.000 min_bisection.py:226(_add_triangle_inequality)
        1    0.142    0.142   82.981   82.981 min_bisection.py:428(solve_iteratively)
   450595    0.117    0.000    0.117    0.000 {method 'add' of 'set' objects}
   459028    0.067    0.000    0.067    0.000 {method 'bit_length' of 'int' objects}
        1    0.041    0.041    0.041    0.041 min_bisection.py:215(<dictcomp>)
       54    0.027    0.001    0.027    0.001 {built-in method builtins.sorted}
        2    0.013    0.006    0.443    0.221 {gurobipy.gurobipy.quicksum}
    10110    0.009    0.000    0.010    0.000 {built-in method _abc._abc_instancecheck}
     5000    0.006    0.000    0.006    0.000 {method 'remove' of 'set' objects}
    10110    0.005    0.000    0.015    0.000 abc.py:137(__instancecheck__)


