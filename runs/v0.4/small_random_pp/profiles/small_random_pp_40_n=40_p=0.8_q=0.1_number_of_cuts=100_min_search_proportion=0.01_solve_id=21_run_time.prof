         238777 function calls in 0.735 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
   103791    0.141    0.000    0.181    0.000 min_bisection.py:340(_get_cut_depth)
        1    0.124    0.124    0.124    0.124 min_bisection.py:65(<setcomp>)
       14    0.107    0.008    0.428    0.031 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
       13    0.080    0.006    0.145    0.011 random.py:286(sample)
      781    0.068    0.000    0.068    0.000 min_bisection.py:219(<genexpr>)
        1    0.052    0.052    0.253    0.253 min_bisection.py:156(_instantiate_model)
     2846    0.040    0.000    0.040    0.000 min_bisection.py:378(_get_vals)
    27267    0.040    0.000    0.059    0.000 random.py:224(_randbelow)
      600    0.024    0.000    0.026    0.000 min_bisection.py:226(_add_triangle_inequality)
        6    0.017    0.003    0.019    0.003 min_bisection.py:293(_optimize)
    45706    0.014    0.000    0.014    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    0.006    0.006    0.006    0.006 min_bisection.py:215(<dictcomp>)
    25951    0.006    0.000    0.006    0.000 {method 'add' of 'set' objects}
    27267    0.004    0.000    0.004    0.000 {method 'bit_length' of 'int' objects}
        1    0.002    0.002    0.735    0.735 min_bisection.py:428(solve_iteratively)
        2    0.002    0.001    0.070    0.035 {gurobipy.gurobipy.quicksum}
     1230    0.001    0.000    0.001    0.000 {built-in method _abc._abc_instancecheck}
       14    0.001    0.000    0.001    0.000 {built-in method builtins.sorted}
     1230    0.001    0.000    0.002    0.000 abc.py:137(__instancecheck__)
      600    0.001    0.000    0.001    0.000 {method 'remove' of 'set' objects}


