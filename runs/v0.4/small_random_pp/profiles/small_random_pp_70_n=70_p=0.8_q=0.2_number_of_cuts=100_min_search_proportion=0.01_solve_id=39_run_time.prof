         840798 function calls in 5.227 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       20    1.493    0.075    1.497    0.075 min_bisection.py:293(_optimize)
       24    0.875    0.036    1.126    0.047 random.py:286(sample)
       24    0.574    0.024    2.599    0.108 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
   325648    0.522    0.000    0.931    0.000 min_bisection.py:340(_get_cut_depth)
        1    0.439    0.439    0.439    0.439 min_bisection.py:65(<setcomp>)
    26670    0.409    0.000    0.409    0.000 min_bisection.py:378(_get_vals)
        1    0.309    0.309    0.985    0.985 min_bisection.py:156(_instantiate_model)
     2416    0.210    0.000    0.210    0.000 min_bisection.py:219(<genexpr>)
   112510    0.156    0.000    0.221    0.000 random.py:224(_randbelow)
     2000    0.085    0.000    0.092    0.000 min_bisection.py:226(_add_triangle_inequality)
   135677    0.046    0.000    0.046    0.000 {method 'getrandbits' of '_random.Random' objects}
   108788    0.028    0.000    0.028    0.000 {method 'add' of 'set' objects}
        1    0.020    0.020    5.227    5.227 min_bisection.py:428(solve_iteratively)
        1    0.019    0.019    0.019    0.019 min_bisection.py:215(<dictcomp>)
   112510    0.018    0.000    0.018    0.000 {method 'bit_length' of 'int' objects}
        2    0.006    0.003    0.217    0.109 {gurobipy.gurobipy.quicksum}
     4052    0.003    0.000    0.003    0.000 {built-in method _abc._abc_instancecheck}
       24    0.002    0.000    0.002    0.000 {built-in method builtins.sorted}
     4052    0.002    0.000    0.006    0.000 abc.py:137(__instancecheck__)
     2000    0.002    0.000    0.002    0.000 {method 'remove' of 'set' objects}


