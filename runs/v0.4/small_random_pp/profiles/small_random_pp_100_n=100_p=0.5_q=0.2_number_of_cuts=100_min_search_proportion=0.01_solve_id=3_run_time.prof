         4613227 function calls in 1216.315 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       90 1188.550   13.206 1188.570   13.206 min_bisection.py:293(_optimize)
       92   11.682    0.127   13.247    0.144 random.py:286(sample)
       92    4.732    0.051   24.945    0.271 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
   262724    4.385    0.000    4.385    0.000 min_bisection.py:378(_get_vals)
  1279605    2.694    0.000    7.079    0.000 min_bisection.py:340(_get_cut_depth)
   648064    0.940    0.000    1.388    0.000 random.py:224(_randbelow)
        1    0.817    0.817    1.943    1.943 min_bisection.py:156(_instantiate_model)
        1    0.644    0.644    0.644    0.644 min_bisection.py:65(<setcomp>)
     4951    0.426    0.000    0.426    0.000 min_bisection.py:219(<genexpr>)
     9000    0.381    0.000    0.414    0.000 min_bisection.py:226(_add_triangle_inequality)
  1059630    0.349    0.000    0.349    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    0.270    0.270 1216.315 1216.315 min_bisection.py:428(solve_iteratively)
   641905    0.170    0.000    0.170    0.000 {method 'add' of 'set' objects}
   648064    0.099    0.000    0.099    0.000 {method 'bit_length' of 'int' objects}
       92    0.053    0.001    0.053    0.001 {built-in method builtins.sorted}
        1    0.041    0.041    0.041    0.041 min_bisection.py:215(<dictcomp>)
    18188    0.015    0.000    0.017    0.000 {built-in method _abc._abc_instancecheck}
        2    0.013    0.006    0.441    0.221 {gurobipy.gurobipy.quicksum}
     9000    0.011    0.000    0.011    0.000 {method 'remove' of 'set' objects}
    18188    0.010    0.000    0.027    0.000 abc.py:137(__instancecheck__)


