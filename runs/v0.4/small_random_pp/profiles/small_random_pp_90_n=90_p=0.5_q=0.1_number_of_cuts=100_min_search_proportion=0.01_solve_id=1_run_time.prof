         2869432 function calls in 58.096 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       44   46.327    1.053   46.335    1.053 min_bisection.py:293(_optimize)
       48    3.162    0.066    3.934    0.082 random.py:286(sample)
       49    2.379    0.049   10.105    0.206 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
  1276592    2.256    0.000    3.841    0.000 min_bisection.py:340(_get_cut_depth)
   102590    1.585    0.000    1.585    0.000 min_bisection.py:378(_get_vals)
        1    0.528    0.528    1.323    1.323 min_bisection.py:156(_instantiate_model)
   354144    0.489    0.000    0.684    0.000 random.py:224(_randbelow)
        1    0.410    0.410    0.410    0.410 min_bisection.py:65(<setcomp>)
     4006    0.339    0.000    0.339    0.000 min_bisection.py:219(<genexpr>)
     4400    0.176    0.000    0.192    0.000 min_bisection.py:226(_add_triangle_inequality)
   397357    0.136    0.000    0.136    0.000 {method 'getrandbits' of '_random.Random' objects}
   345552    0.085    0.000    0.085    0.000 {method 'add' of 'set' objects}
        1    0.074    0.074   58.096   58.096 min_bisection.py:428(solve_iteratively)
   354144    0.059    0.000    0.059    0.000 {method 'bit_length' of 'int' objects}
        1    0.032    0.032    0.032    0.032 min_bisection.py:215(<dictcomp>)
       49    0.015    0.000    0.015    0.000 {built-in method builtins.sorted}
        2    0.011    0.006    0.353    0.176 {gurobipy.gurobipy.quicksum}
     8900    0.008    0.000    0.008    0.000 {built-in method _abc._abc_instancecheck}
     4400    0.005    0.000    0.005    0.000 {method 'remove' of 'set' objects}
     8900    0.005    0.000    0.013    0.000 abc.py:137(__instancecheck__)


