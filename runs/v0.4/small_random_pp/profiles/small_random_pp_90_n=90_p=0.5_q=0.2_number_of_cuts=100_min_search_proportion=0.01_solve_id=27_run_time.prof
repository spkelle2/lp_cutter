         2713446 function calls in 512.880 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       74  496.542    6.710  496.557    6.710 min_bisection.py:293(_optimize)
       76    5.780    0.076    6.659    0.088 random.py:286(sample)
       76    2.782    0.037   13.857    0.182 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
   172068    2.757    0.000    2.757    0.000 min_bisection.py:378(_get_vals)
   853723    1.727    0.000    4.485    0.000 min_bisection.py:340(_get_cut_depth)
        1    0.866    0.866    0.866    0.866 min_bisection.py:65(<setcomp>)
        1    0.623    0.623    1.878    1.878 min_bisection.py:156(_instantiate_model)
   395470    0.558    0.000    0.780    0.000 random.py:224(_randbelow)
     4006    0.343    0.000    0.343    0.000 min_bisection.py:219(<genexpr>)
     7400    0.298    0.000    0.324    0.000 min_bisection.py:226(_add_triangle_inequality)
        1    0.164    0.164  512.880  512.880 min_bisection.py:428(solve_iteratively)
   445315    0.157    0.000    0.157    0.000 {method 'getrandbits' of '_random.Random' objects}
   391303    0.094    0.000    0.094    0.000 {method 'add' of 'set' objects}
   395470    0.066    0.000    0.066    0.000 {method 'bit_length' of 'int' objects}
        1    0.032    0.032    0.032    0.032 min_bisection.py:215(<dictcomp>)
       76    0.026    0.000    0.026    0.000 {built-in method builtins.sorted}
    14956    0.012    0.000    0.013    0.000 {built-in method _abc._abc_instancecheck}
        2    0.011    0.006    0.356    0.178 {gurobipy.gurobipy.quicksum}
     7400    0.008    0.000    0.008    0.000 {method 'remove' of 'set' objects}
    14956    0.008    0.000    0.021    0.000 abc.py:137(__instancecheck__)


