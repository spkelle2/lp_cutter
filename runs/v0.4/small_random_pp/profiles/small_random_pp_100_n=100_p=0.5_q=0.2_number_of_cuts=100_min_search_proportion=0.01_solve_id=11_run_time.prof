         5268004 function calls in 892.437 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       81  863.748   10.664  863.766   10.664 min_bisection.py:293(_optimize)
       84   10.975    0.131   12.554    0.149 random.py:286(sample)
       85    5.260    0.062   25.839    0.304 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
   236481    4.428    0.000    4.428    0.000 min_bisection.py:378(_get_vals)
  1925837    3.716    0.000    8.143    0.000 min_bisection.py:340(_get_cut_depth)
   657877    0.957    0.000    1.401    0.000 random.py:224(_randbelow)
        1    0.891    0.891    2.040    2.040 min_bisection.py:156(_instantiate_model)
        1    0.665    0.665    0.665    0.665 min_bisection.py:65(<setcomp>)
     4951    0.428    0.000    0.428    0.000 min_bisection.py:219(<genexpr>)
  1074561    0.346    0.000    0.346    0.000 {method 'getrandbits' of '_random.Random' objects}
     8100    0.336    0.000    0.366    0.000 min_bisection.py:226(_add_triangle_inequality)
        1    0.251    0.251  892.437  892.437 min_bisection.py:428(solve_iteratively)
   648437    0.171    0.000    0.171    0.000 {method 'add' of 'set' objects}
   657877    0.098    0.000    0.098    0.000 {method 'bit_length' of 'int' objects}
       85    0.050    0.001    0.050    0.001 {built-in method builtins.sorted}
        1    0.040    0.040    0.040    0.040 min_bisection.py:215(<dictcomp>)
    16372    0.014    0.000    0.015    0.000 {built-in method _abc._abc_instancecheck}
        2    0.013    0.006    0.443    0.222 {gurobipy.gurobipy.quicksum}
     8100    0.010    0.000    0.010    0.000 {method 'remove' of 'set' objects}
    16372    0.009    0.000    0.024    0.000 abc.py:137(__instancecheck__)


