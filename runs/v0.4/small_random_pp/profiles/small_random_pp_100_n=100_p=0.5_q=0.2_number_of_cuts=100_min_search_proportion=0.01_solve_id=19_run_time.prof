         4533403 function calls in 1130.758 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       88 1102.854   12.532 1102.874   12.533 min_bisection.py:293(_optimize)
       90   11.688    0.130   13.224    0.147 random.py:286(sample)
       90    4.857    0.054   25.038    0.278 min_bisection.py:404(_recalibrate_cut_depths_by_search_proportion)
   257010    4.329    0.000    4.329    0.000 min_bisection.py:378(_get_vals)
  1267068    2.747    0.000    7.076    0.000 min_bisection.py:340(_get_cut_depth)
   635397    0.924    0.000    1.360    0.000 random.py:224(_randbelow)
        1    0.842    0.842    1.974    1.974 min_bisection.py:156(_instantiate_model)
        1    0.651    0.651    0.651    0.651 min_bisection.py:65(<setcomp>)
     4951    0.425    0.000    0.425    0.000 min_bisection.py:219(<genexpr>)
     8800    0.381    0.000    0.413    0.000 min_bisection.py:226(_add_triangle_inequality)
  1037534    0.339    0.000    0.339    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    0.277    0.277 1130.758 1130.758 min_bisection.py:428(solve_iteratively)
   629168    0.169    0.000    0.169    0.000 {method 'add' of 'set' objects}
   635397    0.097    0.000    0.097    0.000 {method 'bit_length' of 'int' objects}
       90    0.054    0.001    0.054    0.001 {built-in method builtins.sorted}
        1    0.041    0.041    0.041    0.041 min_bisection.py:215(<dictcomp>)
    17784    0.015    0.000    0.017    0.000 {built-in method _abc._abc_instancecheck}
        2    0.012    0.006    0.440    0.220 {gurobipy.gurobipy.quicksum}
     8800    0.010    0.000    0.010    0.000 {method 'remove' of 'set' objects}
    17784    0.010    0.000    0.026    0.000 abc.py:137(__instancecheck__)


