         2941716 function calls in 140.300 seconds

   Ordered by: internal time
   List reduced from 53 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        4  131.333   32.833  131.334   32.833 min_bisection.py:291(_optimize)
  2011828    2.967    0.000    3.430    0.000 min_bisection.py:338(_get_cut_depth)
        8    2.152    0.269    6.471    0.809 min_bisection.py:402(_recalibrate_cut_depths_by_search_proportion)
    20445    0.747    0.000    0.818    0.000 min_bisection.py:225(_add_triangle_inequality)
        1    0.603    0.603    1.418    1.418 min_bisection.py:156(_instantiate_model)
        5    0.559    0.112    0.949    0.190 random.py:286(sample)
     9779    0.463    0.000    0.463    0.000 min_bisection.py:376(_get_vals)
        1    0.418    0.418    0.418    0.418 min_bisection.py:65(<setcomp>)
     4006    0.354    0.000    0.354    0.000 min_bisection.py:218(<genexpr>)
   192606    0.253    0.000    0.347    0.000 random.py:224(_randbelow)
        8    0.102    0.013    0.102    0.013 {built-in method builtins.sorted}
        1    0.082    0.082  140.300  140.300 min_bisection.py:426(solve_iteratively)
   220748    0.066    0.000    0.066    0.000 {method 'getrandbits' of '_random.Random' objects}
   182993    0.043    0.000    0.043    0.000 {method 'add' of 'set' objects}
        1    0.031    0.031    0.031    0.031 min_bisection.py:214(<dictcomp>)
   192606    0.028    0.000    0.028    0.000 {method 'bit_length' of 'int' objects}
    40904    0.027    0.000    0.028    0.000 {built-in method _abc._abc_instancecheck}
    20445    0.023    0.000    0.023    0.000 {method 'remove' of 'set' objects}
    40904    0.021    0.000    0.048    0.000 abc.py:137(__instancecheck__)
        8    0.014    0.002    0.117    0.015 min_bisection.py:415(_find_most_violated_constraints)


